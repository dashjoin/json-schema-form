{"version":3,"sources":["../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.service.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../projects/dashjoin/json-schema-form/src/lib/widget.directive.ts","../../../../projects/dashjoin/json-schema-form/src/lib/json-pointer.ts","../../../../projects/dashjoin/json-schema-form/src/lib/choice.ts","../../../../projects/dashjoin/json-schema-form/src/lib/edit-element-dialog.component.ts","../../../../projects/dashjoin/json-schema-form/src/lib/edit-element-dialog.component.html","../../../../projects/dashjoin/json-schema-form/src/lib/edit.ts","../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.component.html","../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.component.ts","../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.module.ts"],"names":["JsonSchemaFormService","this","editMode","formats","email","ipv4","url","uri","registry","displayWithRegistry","prototype","registerComponent","key","value","registerDisplayWith","factory","ɵfac","providedIn","Injectable","Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","done","TypeError","__read","n","r","e","ar","push","error","WidgetDirective","viewContainerRef","i0","ɵɵdirectiveInject","ViewContainerRef","selectors","Directive","selector","JsonPointer","jsonPointer","pointer","jsonPointer2","split","paths","undefined","path","np","assign","splice","res","_b","values","_c","f","startsWith","arr","substring","arr_1","arr_1_1","Error","DefaultChoiceHandler","http","load","schema","_this","cache","choices","_d","choice","forkJoin","getChoices","choicesUrl","choicesUrlArgs","choicesVerb","pipe","switchMap","jsonata","evaluate","Array","isArray","obs","res_1","res_1_1","publishReplay","refCount","filter","current","map","include","_a","name","toLowerCase","includes","displayWith","delimiter","parts","of","displayWithChoices","indexOf","args","verb","get","post","headers","HttpHeaders","Content-Type","debounceTime","EditElementDialogComponent","dialogRef","data","title","layout","order","static","type","properties","description","class","items","style","width","additionalProperties","errorMessage","required","keys","enum","itemlayout","readOnly","padding-top","format","widget","example","i1$1","MatDialogRef","MAT_DIALOG_DATA","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","close","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵproperty","Component","templateUrl","Inject","Edit","schemaChange","parent","dialog","canAdd","addable","set","Set","_f","_g","p","p_1","e_2","p_1_1","q","delete","from","addSub","prop","index","_e","emit","canAddSub","subaddable","p_2","e_5","p_2_1","add","edit","clone","JSON","parse","stringify","examples","open","minWidth","afterClosed","subscribe","el","canHide","hide","canUp","props","props_1","props_1_1","up","tmp","canDown","props_2","props_2_1","down","ɵɵrestoreView","_r5_1","ɵɵnextContext","ctx_r0","expanded","i0.ɵɵtextInterpolate","switch","rootValue","rootSchema","base","x_r28","x_r31","i0.ɵɵtemplate","ctx_r7","isRoot","_r24","_r26","_r48_1","x_r43","ctx_r44","hideUndefined","ctx_r52","x_r53","i0.ɵɵtextInterpolate1","ctx_r8","i0.ɵɵpropertyInterpolate","_r66_1","hover","x_r58","ctx_r56","ctx_r9","_r91_1","ctx_r73","ctx_r10","_r106_1","ctx_r96","i_r99","ctx_r11","ctx_r12","_r112","separatorKeysCodes","_r130_1","ctx_r120","ctx_r13","_r147_1","ctx_r141","x_r143","i0.ɵɵelement","ctx_r14","ctx_r15","choice_r160","$event","_r162_1","change","ctx_r16","ctx_r17","_r164","ctx_r18","choice_r172","_r174_1","ctx_r169","choice_r178","ctx_r170","_r176","_r184_1","ctx_r185","getInputType","ctx_r181","ctx_r182","ctx_r20","ctx_r188","ctx_r189","ctx_r21","ctx_r22","JsonSchemaFormComponent","componentFactoryResolver","service","valueChange","EventEmitter","errorChange","ENTER","COMMA","TAB","originalOrder","a","b","setOrderedProperties","orderedProperties","entries","_h","_j","ngOnInit","createOnly","$ref","default","setTimeout","getLayout","loadComponent","recursiveError","ch","control","FormControl","ReplaySubject","filteredOptions","valueChanges","startWith","x","target","parentSchema","focus","ref","URL","href","referenced","console","log","event","ngOnChanges","changes","previousValue","widgetHost","clear","isFirstChange","case","onValueChange","computed","field","expression","addField","remove","removeField","fieldNameChange","newvalue","child","children","customError","maxItems","uniqueItems","size","minItems","maxProperties","propertyNames","re","RegExp","test","dependencies","dep","_k","e_10","_l","l","minProperties","maxLength","minLength","multipleOf","Number","isInteger","exclusiveMaximum","maximum","exclusiveMinimum","minimum","is","NaN","_m","_o","inactive","switc","pattern","getLabel","label","MatSelectChange","MatDatepickerInputEvent","serializeDate","dateFormat","MatAutocompleteSelectedEvent","option","MatCheckboxChange","checked","parseFloat","parseInt","handleFileInput","files","item","reader","FileReader","onload","result","readAsDataURL","componentFactory","resolveComponentFactory","widgetType","componentRef","createComponent","instance","setAndEmit","setIndexAndEmit","setIndexAndEmitTable","showProperty","showPropertyList","sw","k","v","sort","parseDate","date","sameDate","Date","pdate","getDelimiter","pformat","nd","getTime","valueOf","toISOString","getFullYear","getMonth","getDate","delim","match","addChip","input","trim","removeChip","dropChip","moveItemInArray","previousIndex","currentIndex","i1","HttpClient","ComponentFactoryResolver","MatDialog","viewQuery","i8","MatTooltip","i9","MatIcon","i10","MatMenuTrigger","MatMenu","MatMenuItem","i4","NgForOf","i11","DefaultLayoutDirective","i12","MatButton","i13","MatCheckbox","i14","MatFormField","MatLabel","i15","MatInput","i16","MatTabGroup","MatTab","MatTabLabel","i17","MatChipList","i18","CdkDropList","MatChipInput","MatChip","CdkDrag","MatChipRemove","i19","MatSelect","i20","MatOption","i21","MatDatepickerInput","MatDatepickerToggle","MatSuffix","MatDatepicker","i22","DefaultValueAccessor","i23","MatAutocompleteTrigger","NgControlStatus","FormControlDirective","MatAutocomplete","pipes","KeyValuePipe","AsyncPipe","styles","styleUrls","ViewChildren","ViewChild","Input","Output","inExpansion","inArray","JsonSchemaFormModule","provide","MAT_TOOLTIP_DEFAULT_OPTIONS","useValue","touchGestures","imports","MatCardModule","FlexLayoutModule","MatIconModule","MatTooltipModule","MatTableModule","MatTabsModule","MatFormFieldModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatAutocompleteModule","HttpClientModule","CommonModule","MatInputModule","MatNativeDateModule","MatButtonModule","MatExpansionModule","MatMenuModule","ReactiveFormsModule","MatDialogModule","MatChipsModule","DragDropModule","declarations","exports","NgModule","providers","MatDialogContent","MatDialogActions","MatDialogClose"],"mappings":"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","sourcesContent":["import { Injectable, Type } from '@angular/core';\r\nimport { ChoiceHandler } from './choice';\r\n\r\n/**\r\n * service for registering custom components\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JsonSchemaFormService {\r\n\r\n  /**\r\n   * layout editor mode\r\n   */\r\n  public editMode = false;\r\n\r\n  /**\r\n   * built-in formats\r\n   */\r\n  formats = {\r\n    email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    ipv4: /^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/,\r\n    url: /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/,\r\n    uri: /^\\w+:(\\/?\\/?)[^\\s]+$/\r\n  };\r\n\r\n  /**\r\n   * registry of custom widgets. The keys are the values used in schema.widgetType, the values\r\n   * are the Type<any> of the custom widget component implementing WidgetComponent\r\n   */\r\n  registry = {};\r\n\r\n  /**\r\n   * registry of displayWith objects\r\n   */\r\n  displayWithRegistry: { [key: string]: ChoiceHandler } = {};\r\n\r\n  /**\r\n   * register custom component\r\n   * @param key     the name of the component which is used in schema extension: widget=custom, widgetType=key\r\n   * @param value   the implementation class\r\n   */\r\n  registerComponent(key: string, value: Type<any>) {\r\n    this.registry[key] = value;\r\n  }\r\n\r\n  /**\r\n   * register displayWith implementations\r\n   * @param key     the name of the implementation which is used in schema extension: displayWith=key\r\n   * @param value   the implementation class\r\n   */\r\n  registerDisplayWith(key: string, value: ChoiceHandler) {\r\n    this.displayWithRegistry[key] = value;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n/**\r\n * directive for dynamically loading custom widgets\r\n */\r\n@Directive({\r\n    selector: '[libWidgetHost]'\r\n})\r\nexport class WidgetDirective {\r\n\r\n    /**\r\n     * allow caller to dynamically insert custom component\r\n     * @param viewContainerRef  dynamic component handle\r\n     */\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","/**\r\n * static JsonPointer implementation\r\n */\r\nexport class JsonPointer {\r\n\r\n    /**\r\n     * evaluate the JSON pointer on o\r\n     */\r\n    static jsonPointer(o: any, pointer: string): any {\r\n        return JsonPointer.jsonPointer2(o, JsonPointer.split(pointer));\r\n    }\r\n\r\n    /**\r\n     * evaluate the JSON pointer (parsed array of paths) on o\r\n     */\r\n    static jsonPointer2(o: any, paths: string[]): any {\r\n\r\n        if (o === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        if (paths.length === 0) {\r\n            return o;\r\n        }\r\n\r\n        const path = paths[0];\r\n        const np = Object.assign([], paths);\r\n        np.splice(0, 1);\r\n\r\n        if (paths[0] === '*') {\r\n            const res = [];\r\n            for (const f of (typeof (o) === 'object' ? Object.values(o) : o)) {\r\n                res.push(this.jsonPointer2(f, np));\r\n            }\r\n            return res;\r\n        } else {\r\n            return this.jsonPointer2(o[path], np);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * strip leading / and split the JSON pointer\r\n     */\r\n    static split(s: string): string[] {\r\n        if (s === '') {\r\n            return [];\r\n        }\r\n        if (s.startsWith('/')) {\r\n            s = s.substring(1);\r\n            const arr = s.split('/');\r\n            for (const a of arr) {\r\n                if (a === '') {\r\n                    throw new Error('JSON Pointer must not contain an empty reference token');\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        throw new Error('JSON Pointer must start with /');\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { Schema } from './schema';\r\nimport { map, publishReplay, refCount, switchMap } from 'rxjs/operators';\r\nimport jsonata from 'jsonata';\r\n\r\n/**\r\n * class backing a select / autocomplete option\r\n */\r\nexport interface Choice {\r\n\r\n    /**\r\n     * select value\r\n     */\r\n    value: any;\r\n\r\n    /**\r\n     * display name\r\n     */\r\n    name: string;\r\n}\r\n\r\n/**\r\n * interface for choice handlers for select / autocomplete choices\r\n */\r\nexport interface ChoiceHandler {\r\n\r\n    /**\r\n     * loads the choices\r\n     */\r\n    load(value: any, schema: Schema): Observable<Choice[]>;\r\n\r\n    /**\r\n     * user typed in autocomplete field\r\n     */\r\n    filter(value: any, schema: Schema, current: string, choices: Observable<Choice[]>): Observable<Choice[]>;\r\n\r\n    /**\r\n     * return a single choice (i.e. convert value to Choice)\r\n     */\r\n    choice(value: any, schema: Schema): Observable<Choice>;\r\n\r\n    /**\r\n     * delay between keystrokes before new data is loaded\r\n     */\r\n    debounceTime(): number;\r\n}\r\n\r\n/**\r\n * default implementation that handles choices based on schema fields.\r\n * can be overriden via schema.displayWith\r\n */\r\nexport class DefaultChoiceHandler implements ChoiceHandler {\r\n\r\n    /**\r\n     * create default choice handler\r\n     *\r\n     * @param http      http connection client\r\n     */\r\n    constructor(private http: HttpClient) { }\r\n\r\n    /**\r\n     * http cache for REST request on config/Table (i.e. schema requests)\r\n     */\r\n    cache: Observable<Choice[]>;\r\n\r\n    /**\r\n     * load choices\r\n     */\r\n    load(value: any, schema: Schema): Observable<Choice[]> {\r\n\r\n        if (!this.cache) {\r\n            if (schema.choices) {\r\n                // static choices are given, convert them to Choice and merge the result\r\n                const arr: Observable<Choice>[] = [];\r\n                for (const s of schema.choices) {\r\n                    arr.push(this.choice(s, schema));\r\n                }\r\n                this.cache = forkJoin(arr);\r\n            } else {\r\n                // load choices from URL\r\n                this.cache = this.getChoices(schema.choicesUrl, schema.choicesUrlArgs, schema.choicesVerb).pipe(\r\n                    switchMap(res => {\r\n                        if (schema.jsonata) {\r\n                            res = jsonata(schema.jsonata).evaluate(res);\r\n                            if (!Array.isArray(res)) {\r\n                                res = [res];\r\n\r\n                                // introduce jsonName, jsonValue\r\n                            }\r\n                        }\r\n                        const obs: Observable<Choice>[] = [];\r\n                        for (const r of res) {\r\n                            obs.push(this.choice(r, schema));\r\n                        }\r\n                        return forkJoin(obs);\r\n                    }),\r\n\r\n                    // setup caching\r\n                    publishReplay(1),\r\n                    refCount()\r\n                );\r\n            }\r\n        }\r\n        return this.cache;\r\n    }\r\n\r\n    /**\r\n     * filter after keystroke\r\n     */\r\n    filter(value: any, schema: Schema, current: string, choices: Observable<Choice[]>): Observable<Choice[]> {\r\n        return choices.pipe(map(arr => {\r\n            if (!current) {\r\n                return arr;\r\n            }\r\n            const res = arr.filter(i => this.include(i, current));\r\n            return res;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * called from filter, intended to allow subclasses to easily change filter algorithm\r\n     */\r\n    include(i: Choice, current: string): boolean {\r\n        return i.name?.toLowerCase().includes(current.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * default choice implementation: just reuse value as name\r\n     * check for localName\r\n     */\r\n    choice(value: any, schema: Schema): Observable<Choice> {\r\n        if (schema.displayWith === 'localName') {\r\n            for (const delimiter of ['/', '#', ':', '.']) {\r\n                const parts = value.split(delimiter);\r\n                if (parts.length > 1) {\r\n                    return of({ value, name: parts[parts.length - 1] });\r\n                }\r\n            }\r\n            return of({ value, name: value });\r\n        }\r\n        if (schema.jsonata) {\r\n            if (typeof value === 'object') {\r\n                return of(value);\r\n            } else {\r\n                // initially, value is a simple string\r\n                return of({ value, name: value });\r\n            }\r\n        }\r\n        if (schema.displayWithChoices) {\r\n            return of({ value, name: schema.displayWithChoices[schema.choices.indexOf(value)] });\r\n        }\r\n        return of({ value, name: value });\r\n    }\r\n\r\n    /**\r\n     * handle GET / POST\r\n     */\r\n    getChoices(url: string, args: any, verb: string): Observable<any> {\r\n        if (verb === 'GET') {\r\n            return this.http.get<any[]>(url, args);\r\n        } else {\r\n            return this.http.post<any[]>(url, args, {\r\n                headers: new HttpHeaders({\r\n                    'Content-Type': 'application/json',\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * default: no delay\r\n     */\r\n    debounceTime() {\r\n        return 0;\r\n    }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * dialog to edit a JSON node in a layout structure\r\n */\r\n@Component({\r\n  selector: 'lib-edit-element-dialog',\r\n  templateUrl: './edit-element-dialog.component.html'\r\n})\r\nexport class EditElementDialogComponent {\r\n\r\n  /**\r\n   * dialog constrcutor\r\n   * @param dialogRef   disloag ref\r\n   * @param data        data to edit\r\n   */\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditElementDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.schema = {\r\n      title: 'Edit form',\r\n      layout: 'vertical',\r\n      order: [\r\n        ['widget', 'layout', 'itemlayout'],\r\n        ['title', 'description'],\r\n        ['example', 'readOnly'],\r\n        ['required', 'format', 'errorMessage'],\r\n        'choices', 'class', 'style'\r\n      ],\r\n      static: true,\r\n      type: 'object',\r\n      properties: {\r\n        // description, class, style are always applicable\r\n        description: { type: 'string', static: true, title: 'Description / tooltip' },\r\n        class: { type: 'array', items: { type: 'string' }, layout: 'chips', style: { width: '365px' }, static: true, title: 'CSS classes' },\r\n        style: { type: 'object', additionalProperties: { type: 'string' }, static: true, title: 'CSS styles' }\r\n      }\r\n    };\r\n\r\n    if (data.properties) {\r\n      // only show required and error message for objects\r\n      this.schema.properties.errorMessage = { type: 'string', static: true, title: 'Validation error message' };\r\n      this.schema.properties.required = {\r\n        choices: Object.keys(data.properties), type: 'array', layout: 'select', items: { type: 'string' }, static: true,\r\n        title: 'Required fields'\r\n      };\r\n      this.schema.properties.layout = { type: 'string', enum: ['vertical', 'horizontal'], static: true, title: 'Screen layout' };\r\n    } else {\r\n      if (data.items) {\r\n        this.schema.properties.layout = {\r\n          type: 'string', enum: ['vertical', 'horizontal', 'select', 'tab', 'table', 'chips'],\r\n          static: true, title: 'Screen Layout'\r\n        };\r\n        this.schema.properties.itemlayout = { type: 'string', enum: ['vertical', 'horizontal'], static: true, title: 'Item screen layout' };\r\n      }\r\n      if (data.items?.properties) {\r\n        // array of objects\r\n        this.schema.properties.errorMessage = { type: 'string', static: true, title: 'Validation error message' };\r\n        this.schema.properties.required = {\r\n          choices: Object.keys(data.items.properties), type: 'array', layout: 'select', items: { type: 'string' }, static: true,\r\n          title: 'Required fields'\r\n        };\r\n      } else {\r\n        // array of simple types\r\n        this.schema.properties.readOnly = {\r\n          type: 'boolean', static: true, title: 'Read only value', style: { 'padding-top': '15px' }\r\n        };\r\n        this.schema.properties.errorMessage = { type: 'string', static: true, title: 'Validation error message' };\r\n        this.schema.properties.format = {\r\n          type: 'string', static: true, title: 'Format',\r\n          widget: 'select', choices: [null, 'email', 'ipv4', 'url', 'uri']\r\n        };\r\n        this.schema.properties.example = { type: 'string', static: true, title: 'Example data' };\r\n        this.schema.properties.title = { type: 'string', static: true, title: 'Title' };\r\n        this.schema.properties.widget = {\r\n          type: 'string', enum: ['text', 'select', 'date', 'textarea', 'password'], static: true,\r\n          title: 'Form widget'\r\n        };\r\n        this.schema.properties.choices = {\r\n          type: 'array', items: { type: 'string' }, style: { width: '365px' },\r\n          layout: 'chips', static: true, title: 'Input choices'\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * schema to edit input form fields\r\n   */\r\n  schema: any;\r\n}\r\n","<mat-dialog-content style=\"padding-top: 10px;\">\r\n    <lib-json-schema-form [(value)]=\"data\" [schema]=\"schema\" [label]=\"schema.title\"></lib-json-schema-form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button (click)=\"dialogRef.close()\">Cancel</button>\r\n    <button mat-raised-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button>\r\n</mat-dialog-actions>","import { EventEmitter } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EditElementDialogComponent } from './edit-element-dialog.component';\r\nimport { Schema } from './schema';\r\n\r\n/**\r\n * form editor - has a 1:1 relationship to form node\r\n */\r\nexport class Edit {\r\n\r\n    /**\r\n     * get access to parent object's fields\r\n     *\r\n     * @param schemaChange  signal a change\r\n     * @param name          the current property name (key)\r\n     * @param schema        the current schema\r\n     * @param parent        the parent's schema (required in order to change the order)\r\n     * @param dialog        dialog service\r\n     */\r\n    constructor(\r\n        private schemaChange: EventEmitter<void>, private name: string, private schema: Schema, private parent: Schema,\r\n        private dialog: MatDialog) {\r\n    }\r\n\r\n    /**\r\n     * can add if addable is not empty\r\n     */\r\n    canAdd(): boolean {\r\n        return this.addable().length > 0;\r\n    }\r\n\r\n    /**\r\n     * get the entries in \"properties\" that are not in \"order\"\r\n     */\r\n    addable(): string[] {\r\n        let s: Schema;\r\n        if (this.schema.properties) {\r\n            s = this.schema;\r\n        } else if (this.schema.items?.properties) {\r\n            s = this.schema.items;\r\n        } else if (this.schema.additionalProperties?.properties) {\r\n            s = this.schema.additionalProperties;\r\n        } else {\r\n            return [];\r\n        }\r\n        if (s.order) {\r\n            const set = new Set(Object.keys(s.properties));\r\n            for (const p of s.order) {\r\n                if (Array.isArray(p)) {\r\n                    for (const q of p) {\r\n                        set.delete(q);\r\n                    }\r\n                } else {\r\n                    set.delete(p);\r\n                }\r\n            }\r\n            return Array.from(set);\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add a hidden prop to the end of the list\r\n     */\r\n    addSub(prop: string) {\r\n        const index = this.parent.order.indexOf(this.name);\r\n        if (index >= 0) {\r\n            this.parent.order[index] = [(this.parent.order[index] as string), prop];\r\n        } else {\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    if (p.indexOf(this.name) >= 0) {\r\n                        p.push(prop);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * can add if addable is not empty\r\n     */\r\n    canAddSub(): boolean {\r\n        return this.subaddable().length > 0;\r\n    }\r\n\r\n    /**\r\n     * get the entries in \"properties\" that are not in \"order\"\r\n     */\r\n    subaddable(): string[] {\r\n        if (this.parent?.order) {\r\n            const set = new Set(Object.keys(this.parent.properties));\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    for (const q of p) {\r\n                        set.delete(q);\r\n                    }\r\n                } else {\r\n                    set.delete(p);\r\n                }\r\n            }\r\n            return Array.from(set);\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add a hidden prop to the end of the list\r\n     */\r\n    add(prop: string) {\r\n        if (this.schema.properties) {\r\n            this.schema.order.push(prop);\r\n        } else if (this.schema.items?.properties) {\r\n            this.schema.items.order.push(prop);\r\n        } else {\r\n            this.schema.additionalProperties.order.push(prop);\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * edit simple schema fields like title and description\r\n     */\r\n    edit() {\r\n        // deep clone object so we have the possibility to cancel editing\r\n        const clone = JSON.parse(JSON.stringify(this.schema));\r\n\r\n        // handle (array) example\r\n        if (clone.items?.examples?.length > 0) {\r\n            clone.example = clone.items.examples[0];\r\n        }\r\n        if (clone.examples?.length > 0) {\r\n            clone.example = clone.examples[0];\r\n        }\r\n\r\n        // text is default\r\n        if (!clone.widget) {\r\n            clone.widget = 'text';\r\n        }\r\n\r\n        // horizontal is default\r\n        if (!clone.layout) {\r\n            clone.layout = 'horizontal';\r\n        }\r\n\r\n        // array: apply choices and widget to items\r\n        if (clone.items) {\r\n            clone.widget = clone.items.widget;\r\n            clone.choices = clone.items.choices;\r\n            clone.errorMessage = clone.items.errorMessage;\r\n            clone.format = clone.items.format;\r\n            clone.required = clone.items.required;\r\n            clone.itemlayout = clone.items.layout;\r\n        }\r\n\r\n        const dialogRef = this.dialog.open(EditElementDialogComponent, { minWidth: '50%', data: clone });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data) {\r\n                this.schema.title = data.title;\r\n                this.schema.description = data.description;\r\n                this.schema.widget = data.widget;\r\n                this.schema.layout = data.layout;\r\n                this.schema.readOnly = data.readOnly;\r\n                this.schema.errorMessage = data.errorMessage;\r\n                if (data.example) {\r\n                    if (data.items) {\r\n                        this.schema.items.examples = [data.example];\r\n                    } else {\r\n                        this.schema.examples = [data.example];\r\n                    }\r\n                }\r\n                if (data.style) {\r\n                    delete data.style[''];\r\n                }\r\n                if (data.style && Object.keys(data.style).length > 0) {\r\n                    this.schema.style = data.style;\r\n                }\r\n                if (data.class) {\r\n                    data.class = data.class.filter(el => el != null);\r\n                }\r\n                if (data.class?.length > 0) {\r\n                    this.schema.class = data.class;\r\n                }\r\n                if (data.items) {\r\n                    if (data.choices?.length > 0) {\r\n                        this.schema.items.choices = data.choices;\r\n                    }\r\n                    this.schema.items.widget = data.widget;\r\n                    this.schema.items.format = data.format;\r\n                    this.schema.items.errorMessage = data.errorMessage;\r\n                    this.schema.items.required = data.required;\r\n                    this.schema.items.layout = data.itemlayout;\r\n                } else {\r\n                    this.schema.choices = data.choices;\r\n                    this.schema.widget = data.widget;\r\n                    this.schema.format = data.format;\r\n                    this.schema.errorMessage = data.errorMessage;\r\n                    this.schema.required = data.required;\r\n                }\r\n                this.schemaChange.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * can hide if I my parent is an object\r\n     */\r\n    canHide(): boolean {\r\n        return this.parent ? true : false;\r\n    }\r\n\r\n    /**\r\n     * hide this prop\r\n     */\r\n    hide() {\r\n        if (!this.parent.order) {\r\n            this.parent.order = Object.keys(this.parent.properties);\r\n        }\r\n        let index = 0;\r\n        for (const p of this.parent.order) {\r\n            if (Array.isArray(p)) {\r\n                if (p.indexOf(this.name) >= 0) {\r\n                    p.splice(p.indexOf(this.name), 1);\r\n                    if (p.length === 1) {\r\n                        this.parent.order[index] = p[0];\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        }\r\n        if (this.parent.order.indexOf(this.name) >= 0) {\r\n            this.parent.order.splice(this.parent.order.indexOf(this.name), 1);\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * can I go up\r\n     */\r\n    canUp(): boolean {\r\n        if (!this.parent) {\r\n            return false;\r\n        }\r\n        const props = this.parent.order ? this.parent.order : Object.keys(this.parent.properties);\r\n        const index = props.indexOf(this.name);\r\n        if (index >= 0) {\r\n            return index > 0;\r\n        } else {\r\n            for (const p of props) {\r\n                if (Array.isArray(p)) {\r\n                    if (p.indexOf(this.name) >= 0) {\r\n                        return p.indexOf(this.name) > 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * go up\r\n     */\r\n    up() {\r\n        if (!this.parent.order) {\r\n            this.parent.order = Object.keys(this.parent.properties);\r\n        }\r\n        let index = this.parent.order.indexOf(this.name);\r\n        if (index >= 0) {\r\n            const tmp = this.parent.order[index - 1];\r\n            this.parent.order[index - 1] = this.parent.order[index];\r\n            this.parent.order[index] = tmp;\r\n        } else {\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    index = p.indexOf(this.name);\r\n                    if (index >= 0) {\r\n                        const tmp = p[index - 1];\r\n                        p[index - 1] = p[index];\r\n                        p[index] = tmp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * can I go down\r\n     */\r\n    canDown(): boolean {\r\n        if (!this.parent) {\r\n            return false;\r\n        }\r\n        const props = this.parent.order ? this.parent.order : Object.keys(this.parent.properties);\r\n        const index = props.indexOf(this.name);\r\n        if (index >= 0) {\r\n            return index < props.length - 1;\r\n        } else {\r\n            for (const p of props) {\r\n                if (Array.isArray(p)) {\r\n                    if (p.indexOf(this.name) >= 0) {\r\n                        return p.indexOf(this.name) < p.length - 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * go down\r\n     */\r\n    down() {\r\n        if (!this.parent.order) {\r\n            this.parent.order = Object.keys(this.parent.properties);\r\n        }\r\n        let index = this.parent.order.indexOf(this.name);\r\n        if (index >= 0) {\r\n            const tmp = this.parent.order[index + 1];\r\n            this.parent.order[index + 1] = this.parent.order[index];\r\n            this.parent.order[index] = tmp;\r\n        } else {\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    index = p.indexOf(this.name);\r\n                    if (index >= 0) {\r\n                        const tmp = p[index + 1];\r\n                        p[index + 1] = p[index];\r\n                        p[index] = tmp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n}\r\n","<mat-expansion-panel *ngIf=\"(schema.expanded === true || schema.expanded === false) && !inExpansion\"\r\n  [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\" [expanded]=\"schema.expanded\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>{{label}}</mat-panel-title>\r\n    <mat-panel-description>{{schema.description}}</mat-panel-description>\r\n  </mat-expansion-panel-header>\r\n  <lib-json-schema-form #child [label]=\"label\" [name]=\"name\" [value]=\"value\" (valueChange)=\"setAndEmit($event)\"\r\n    [switch]=\"switch\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema\" [inExpansion]=\"true\"\r\n    [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n  </lib-json-schema-form>\r\n</mat-expansion-panel>\r\n\r\n<div *ngIf=\"(schema.expanded === null || schema.expanded === undefined) || inExpansion\"\r\n  [matTooltip]=\"schema.description\">\r\n\r\n  <div *ngIf=\"service.editMode && !schema.static && !inArray && getLayout() !== 'none'\">\r\n    <mat-icon style=\"cursor: pointer\" [matMenuTriggerFor]=\"menu\"\r\n      [matTooltip]=\"name ? 'Form element '+name : (isRoot ? 'Form root' : '')\">\r\n      more_vert\r\n    </mat-icon>\r\n\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"edit.edit()\">\r\n        <mat-icon>edit</mat-icon>Edit\r\n      </button>\r\n      <button [disabled]=\"!edit.canAdd()\" mat-menu-item [matMenuTriggerFor]=\"madd\">\r\n        <mat-icon>add</mat-icon>Show\r\n      </button>\r\n      <button [disabled]=\"!edit.canAddSub()\" mat-menu-item [matMenuTriggerFor]=\"madd2\">\r\n        <mat-icon>playlist_add</mat-icon>Show inline\r\n      </button>\r\n      <button [disabled]=\" !edit.canHide()\" mat-menu-item (click)=\"edit.hide()\">\r\n        <mat-icon>remove</mat-icon>Hide\r\n      </button>\r\n      <button [disabled]=\"!edit.canUp()\" mat-menu-item (click)=\"edit.up()\">\r\n        <mat-icon>north_west</mat-icon>Up / Left\r\n      </button>\r\n      <button [disabled]=\"!edit.canDown()\" mat-menu-item (click)=\"edit.down()\">\r\n        <mat-icon>south_east</mat-icon>Down / Right\r\n      </button>\r\n    </mat-menu>\r\n\r\n    <mat-menu #madd=\"matMenu\">\r\n      <button *ngFor=\"let x of edit.addable()\" mat-menu-item (click)=\"edit.add(x)\">{{x}}</button>\r\n    </mat-menu>\r\n\r\n    <mat-menu #madd2=\"matMenu\">\r\n      <button *ngFor=\"let x of edit.subaddable()\" mat-menu-item (click)=\"edit.addSub(x)\">{{x}}</button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n  <!-- object row wrap layout -->\r\n  <span *ngIf=\"getLayout() === 'object'\" [fxLayout]=\"schema.layout === 'vertical' ? 'column' : 'row wrap'\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <div *ngFor=\"let op of orderedProperties\" [fxLayout]=\"schema.layout !== 'vertical' ? 'column' : 'row wrap'\">\r\n      <div *ngFor=\" let x of op | keyvalue:originalOrder\" style=\"display: flex; margin: 2px\">\r\n        <div *ngIf=\"x.value && (x.value.type || x.value.$ref)\">\r\n          <lib-json-schema-form #children [name]=\"x.key\" [label]=\"x.value.title ? x.value.title : x.key\"\r\n            [value]=\"value ? value[x.key] : undefined\" (valueChange)=\"onValueChange(x.key, $event)\"\r\n            [switch]=\"value ? value[schema.switch] : undefined\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\"\r\n            [schema]=\"x.value\" [parentSchema]=\"schema\"\r\n            [required]=\"schema.required ? schema.required.includes(x.key) : false\"\r\n            [hideUndefined]=\"schema.hideUndefined\" [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n          </lib-json-schema-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"schema.hideUndefined\" style=\"margin-right: 20px;\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <div *ngFor=\"let x of showPropertyList()\">\r\n          <mat-checkbox [disabled]=\"value ? value[x] : false\" [checked]=\"value && (value[x] !== undefined)\"\r\n            (change)=\"showProperty(x)\">\r\n            {{x}}\r\n          </mat-checkbox>\r\n        </div>\r\n      </mat-menu>\r\n    </div>\r\n  </span>\r\n\r\n  <!-- additional properties -->\r\n  <span *ngIf=\"getLayout() === 'additionalProperties'\" [fxLayout]=\"schema.layout === 'vertical' ? 'column' : 'row wrap'\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <div *ngFor=\"let x of value | keyvalue:originalOrder; let i=index\"\r\n      style=\"display: flex; margin: 2px; position: relative\" (mouseenter)=\"hover=i\" (mouseleave)=\"hover=null\">\r\n      <mat-form-field>\r\n        <mat-label>{{getLabel()}} key</mat-label>\r\n        <input [disabled]=\"readOnly\" autocomplete=\"off\" matInput [value]=\"x.key\"\r\n          (change)=\"fieldNameChange(x.key, $event.target.value)\">\r\n      </mat-form-field>\r\n      &nbsp;\r\n      <lib-json-schema-form #children [label]=\"getLabel() + ' value'\" [value]=\"value[x.key]\"\r\n        (valueChange)=\"onValueChange(x.key, $event)\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\"\r\n        [schema]=\"schema.additionalProperties\" inArray=\"true\" [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"removeField(x.key)\" class=\"example-handle\"\r\n        matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </div>\r\n    <button *ngIf=\"!readOnly\" mat-icon-button (click)=\" addField()\" matTooltip=\"{{getLabel()}}\">\r\n      <mat-icon>add_circle_outline</mat-icon>\r\n    </button>\r\n  </span>\r\n\r\n  <!-- additional properties tab layout -->\r\n  <mat-tab-group animationDuration=\"0ms\" *ngIf=\"getLayout() === 'additionalPropertiesTab'\" style=\"max-width: 96vw\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <mat-tab *ngFor=\"let x of value | keyvalue:originalOrder; let i=index\" style=\"margin: 2px; position: relative\">\r\n      <ng-template mat-tab-label>\r\n        <mat-form-field *ngIf=\"!readOnly\">\r\n          <input autocomplete=\"off\" matInput [value]=\"x.key\" (change)=\"fieldNameChange(x.key, $event.target.value)\">\r\n        </mat-form-field>\r\n        <span *ngIf=\"readOnly\">{{x.key}}</span>\r\n      </ng-template>\r\n      <lib-json-schema-form #children [value]=\"value[x.key]\" (valueChange)=\"onValueChange(x.key, $event)\"\r\n        [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.additionalProperties\" inArray=\"true\"\r\n        [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"removeField(x.key)\" class=\"example-handle\"\r\n        matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"!readOnly\">\r\n      <ng-template mat-tab-label>\r\n        <button mat-icon-button (click)=\"addField()\" matTooltip=\"{{getLabel()}}\">\r\n          <mat-icon>add_circle_outline</mat-icon>\r\n        </button>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <!-- array row wrap layout -->\r\n  <span *ngIf=\"getLayout() === 'array'\" [fxLayout]=\"schema.layout === 'vertical' ? 'column' : 'row wrap'\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <div *ngFor=\"let x of value; let i=index\" style=\"display: flex; margin: 2px; position: relative\"\r\n      (mouseenter)=\"hover=i\" (mouseleave)=\"hover=null\">\r\n      <lib-json-schema-form #children [label]=\"getLabel()\" [value]=\"value[i]\" (valueChange)=\"setIndexAndEmit(i, $event)\"\r\n        inArray=\"true\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.items\" [base]=\"base\"\r\n        (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"remove(i)\" class=\"example-handle\" matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </div>\r\n    <button *ngIf=\"!readOnly\" mat-icon-button (click)=\" add()\" matTooltip=\"{{getLabel()}}\">\r\n      <mat-icon>add_circle_outline</mat-icon>\r\n    </button>\r\n  </span>\r\n\r\n  <!-- array chips layout -->\r\n  <span *ngIf=\"getLayout() === 'chips'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-chip-list #chipList aria-label=\"Fruit selection\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n        (cdkDropListDropped)=\"dropChip($event)\">\r\n        <mat-chip *ngFor=\"let v of value\" [removable]=\"!readOnly\" (removed)=\"removeChip(v)\" cdkDrag>\r\n          {{v}}\r\n          <mat-icon matChipRemove>cancel</mat-icon>\r\n        </mat-chip>\r\n        <input [placeholder]=\"schema.title\" autocomplete=\"off\" [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" (matChipInputTokenEnd)=\"addChip($event)\"\r\n          [disabled]=\"readOnly\">\r\n      </mat-chip-list>\r\n    </mat-form-field>\r\n  </span>\r\n\r\n  <!-- array tab layout -->\r\n  <mat-tab-group animationDuration=\"0ms\" *ngIf=\"getLayout() === 'tab'\" style=\"max-width: 96vw\" [ngStyle]=\"schema.style\"\r\n    [ngClass]=\"schema.class\">\r\n    <mat-tab *ngFor=\"let x of value; let i=index\" style=\"margin: 2px; position: relative\" [label]=\"getLabel()+' '+i\">\r\n      <lib-json-schema-form #children [value]=\"value[i]\" (valueChange)=\"setIndexAndEmit(i, $event)\" inArray=\"true\"\r\n        [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.items\" [base]=\"base\"\r\n        (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"remove(i)\" class=\"example-handle\" matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"!readOnly\">\r\n      <ng-template mat-tab-label>\r\n        <button mat-icon-button (click)=\" add()\" matTooltip=\"{{getLabel()}}\">\r\n          <mat-icon>add_circle_outline</mat-icon>\r\n        </button>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <!-- array table layout -->\r\n  <span *ngIf=\"getLayout() === 'table'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <table summary=\"Properties table\">\r\n      <tr>\r\n        <th *ngFor=\"let x of schema.items.properties | keyvalue:originalOrder\" scope=\"col\">\r\n          {{x.value.title ? x.value.title : x.key}}</th>\r\n        <th id=\"remove_row\"></th>\r\n      </tr>\r\n      <tr *ngFor=\"let row of value; let i=index\">\r\n        <td *ngFor=\"let x of schema.items.properties | keyvalue:originalOrder\">\r\n          <lib-json-schema-form #children [value]=\"row[x.key]\" (valueChange)=\"setIndexAndEmitTable(i, x.key, $event)\"\r\n            [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.items.properties[x.key]\" [base]=\"base\"\r\n            (schemaChange)=\"schemaChange.emit()\">\r\n          </lib-json-schema-form>\r\n        </td>\r\n        <td>\r\n          <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"remove(i)\" matTooltip=\"{{getLabel()}}\">\r\n            <mat-icon>remove_circle_outline</mat-icon>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <button *ngIf=\"!readOnly\" mat-icon-button (click)=\" add()\" matTooltip=\"{{getLabel()}}\">\r\n      <mat-icon>add_circle_outline</mat-icon>\r\n    </button>\r\n  </span>\r\n\r\n  <!-- enum -->\r\n  <div *ngIf=\"getLayout() === 'enum'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <mat-select [value]=\"value\" (selectionChange)=\"change($event)\" [disabled]=\"readOnly\">\r\n        <mat-option *ngFor=\"let x of schema.enum\" [value]=\"x\">{{x}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- array-select -->\r\n  <div *ngIf=\"getLayout() === 'array-select'\">\r\n    <mat-form-field [matTooltip]=\"schema.description\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <mat-select multiple [value]=\"value\" (focus)=\"focus()\" (selectionChange)=\"change($event)\" [disabled]=\"readOnly\">\r\n        <mat-option *ngFor=\"let choice of choices | async\" [value]=\"choice.value\"\r\n          [matTooltip]=\"choice.name !== choice.value ? choice.value : null\">\r\n          {{choice.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- date element -->\r\n  <div *ngIf=\"getLayout() === 'date'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <input autocomplete=\"off\" matInput [value]=\"parseDate(value, schema.dateFormat)\" (dateChange)=\"change($event)\"\r\n        [matDatepicker]=\"picker\" [disabled]=\"readOnly\" style=\"width: 100%\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- checkbox element -->\r\n  <div *ngIf=\"getLayout() === 'checkbox'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"\r\n    style=\"margin: 6px; margin-top: 12px;\">\r\n    <mat-checkbox [checked]=\"value\" (change)=\"change($event)\" [disabled]=\"readOnly\">\r\n      {{label}}</mat-checkbox>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- autocomplete element -->\r\n  <div *ngIf=\"getLayout() === 'autocomplete'\">\r\n    <mat-form-field *ngIf=\"schema.widget === 'select'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <mat-select [value]=\"value\" (focus)=\"focus()\" (selectionChange)=\"change($event)\" [disabled]=\"readOnly\">\r\n        <mat-option *ngFor=\"let choice of choices | async\" [value]=\"choice.value\"\r\n          [matTooltip]=\"choice.name !== choice.value ? choice.value : null\">\r\n          {{choice.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field *ngIf=\"schema.widget !== 'select'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <input type=\"text\" matInput [formControl]=\"control\" [matAutocomplete]=\"auto\" (focus)=\"focus()\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let choice of filteredOptions | async\" [value]=\"choice.value\"\r\n          [matTooltip]=\"choice.name !== choice.value ? choice.value : null\">\r\n          {{choice.name}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- single element -->\r\n  <div *ngIf=\"getLayout() === 'single'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <input *ngIf=\"!inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" autocomplete=\"off\" matInput\r\n        [type]=\"getInputType(schema)\" [value]=\"value\" (input)=\"change($event)\"\r\n        (focus)=\"getInputType(schema) == 'password' ? value = '':''\">\r\n      <input *ngIf=\"inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" autocomplete=\"off\" matInput\r\n        [type]=\"getInputType(schema)\" [value]=\"value\" (change)=\"change($event)\">\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- textarea element -->\r\n  <div *ngIf=\"getLayout() === 'textarea'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <textarea *ngIf=\"!inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" matInput [value]=\"value\"\r\n        (input)=\"change($event)\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"></textarea>\r\n      <textarea *ngIf=\"inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" matInput [value]=\"value\"\r\n        (change)=\"change($event)\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"></textarea>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- upload -->\r\n  <div *ngIf=\"getLayout() === 'upload'\">\r\n    <input type=\"file\" id=\"file\" (change)=\"handleFileInput($event)\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"\r\n      [disabled]=\"readOnly\">\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n</div>\r\n<ng-template libWidgetHost></ng-template>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewChildren,\r\n  QueryList,\r\n} from \"@angular/core\";\r\nimport { MatSelectChange } from \"@angular/material/select\";\r\nimport { MatDatepickerInputEvent } from \"@angular/material/datepicker\";\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { forkJoin, Observable, ReplaySubject } from \"rxjs\";\r\nimport { KeyValue } from \"@angular/common\";\r\nimport { Schema } from \"./schema\";\r\nimport { WidgetComponent } from \"./widget.component\";\r\nimport { WidgetDirective } from \"./widget.directive\";\r\nimport { JsonSchemaFormService } from \"./json-schema-form.service\";\r\nimport { MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { JsonPointer } from \"./json-pointer\";\r\nimport { Choice, ChoiceHandler, DefaultChoiceHandler } from \"./choice\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { debounceTime, startWith, switchMap } from \"rxjs/operators\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Edit } from \"./edit\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\r\nimport { COMMA, ENTER, TAB } from \"@angular/cdk/keycodes\";\r\nimport jsonata from \"jsonata\";\r\n\r\n/**\r\n * generates an input form base on JSON schema and JSON object.\r\n * The component is used recursively.\r\n */\r\n@Component({\r\n  selector: \"lib-json-schema-form\",\r\n  templateUrl: \"./json-schema-form.component.html\",\r\n  styleUrls: [\"./json-schema-form.component.css\"],\r\n})\r\nexport class JsonSchemaFormComponent implements OnInit, OnChanges {\r\n  /**\r\n   * component constructor\r\n   * @param http                        http client\r\n   * @param componentFactoryResolver    allows dynamic components\r\n   * @param service                     application service for registering components etc.\r\n   * @param dialog                      dialog service\r\n   */\r\n  constructor(\r\n    private http: HttpClient,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    public service: JsonSchemaFormService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  /**\r\n   * container children for event propagation\r\n   */\r\n  @ViewChildren(\"children\") children: QueryList<JsonSchemaFormComponent>;\r\n\r\n  /**\r\n   * container children for event propagation\r\n   */\r\n  @ViewChild(\"child\") child: JsonSchemaFormComponent;\r\n\r\n  /**\r\n   * if an array is displayed, indicates which array index is being hovered over in order to\r\n   * display the \"-\" remove button\r\n   */\r\n  hover: number;\r\n\r\n  /**\r\n   * the name of the input field (only set if inside type: object)\r\n   */\r\n  @Input() name: string;\r\n\r\n  /**\r\n   * the label of the input field\r\n   */\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * the input value\r\n   */\r\n  @Input() value: any;\r\n\r\n  /**\r\n   * root form value (can be used in custom components)\r\n   */\r\n  @Input() rootValue: any;\r\n\r\n  /**\r\n   * emit changes done by the user in the component\r\n   */\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * emit whether this part of the form is valid\r\n   */\r\n  @Output() errorChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  /**\r\n   * indicate schema changes done via the layout editor\r\n   */\r\n  @Output() schemaChange: EventEmitter<void> = new EventEmitter();\r\n\r\n  /**\r\n   * JSON schema to use\r\n   */\r\n  @Input() schema: Schema;\r\n\r\n  /**\r\n   * parent schema to edit required\r\n   */\r\n  @Input() parentSchema: Schema;\r\n\r\n  /**\r\n   * form editor\r\n   */\r\n  edit: Edit;\r\n\r\n  /**\r\n   * root JSON schema to use when looking up $ref (simply passed along the tree)\r\n   */\r\n  @Input() rootSchema: Schema;\r\n\r\n  /**\r\n   * base URL for resolving $ref\r\n   */\r\n  @Input() base: string;\r\n\r\n  /**\r\n   * indicates whether this is the root of the component tree\r\n   */\r\n  isRoot = false;\r\n\r\n  /**\r\n   * if present: value of the switch property that determines whether this component renders itself\r\n   * (schema.case not present or schema.case === switch)\r\n   */\r\n  @Input() switch: string;\r\n\r\n  /**\r\n   * indicates to child components whether the parent object has hideUndefined set (i.e. do not render yourself\r\n   * if your value is undefined)\r\n   */\r\n  @Input() hideUndefined: boolean;\r\n\r\n  /**\r\n   * are we already in the expansion panel?\r\n   */\r\n  @Input() inExpansion: boolean;\r\n\r\n  /**\r\n   * are we already in an array?\r\n   */\r\n  @Input() inArray: boolean;\r\n\r\n  /**\r\n   * required imported from parent\r\n   */\r\n  @Input() required: boolean;\r\n\r\n  /**\r\n   * hook for custom widgets\r\n   */\r\n  @ViewChild(WidgetDirective, { static: true }) widgetHost: WidgetDirective;\r\n\r\n  /**\r\n   * order field transforms properties into this structure.\r\n   * allows omission, ordering and hierarchy\r\n   */\r\n  orderedProperties: { [key: string]: Schema }[];\r\n\r\n  /**\r\n   * make sure to return the same date object instance (cannot delete date #83)\r\n   */\r\n  date: Date;\r\n\r\n  /**\r\n   * choices that might be loaded async, initialized with current value and its potentially delayed toString value\r\n   */\r\n  choices: ReplaySubject<Choice[]>;\r\n\r\n  /**\r\n   * autocomplete filtered choices\r\n   */\r\n  filteredOptions: Observable<Choice[]>;\r\n\r\n  /**\r\n   * autocomplete form control for simpler change detection\r\n   */\r\n  control: FormControl;\r\n\r\n  /**\r\n   * implementation specified in displayWith\r\n   */\r\n  ch: ChoiceHandler;\r\n\r\n  /**\r\n   * complete chip entry with enter or comma\r\n   */\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA, TAB];\r\n\r\n  /**\r\n   * readOnly if schema.readOnly or schema.createOnly and value set\r\n   */\r\n  readOnly: boolean;\r\n\r\n  /**\r\n   * error from a custom component\r\n   */\r\n  customError: string;\r\n\r\n  /**\r\n   * apply order, called anytime properties are set\r\n   */\r\n  setOrderedProperties() {\r\n    if (this.schema.order) {\r\n      this.orderedProperties = [];\r\n      for (const p of this.schema.order) {\r\n        const arr = Array.isArray(p) ? p : [p];\r\n        const o = {};\r\n        for (const q of arr) {\r\n          o[q] = this.schema.properties[q];\r\n        }\r\n        this.orderedProperties.push(o);\r\n      }\r\n    } else if (this.schema.properties) {\r\n      this.orderedProperties = [];\r\n      for (const [key, value] of Object.entries(this.schema.properties)) {\r\n        const o = {};\r\n        o[key] = value;\r\n        this.orderedProperties.push(o);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * initialize the comonent.\r\n   * replace undefined with null and init autocomplete choices\r\n   */\r\n  ngOnInit(): void {\r\n    this.readOnly =\r\n      this.schema.readOnly || (this.schema.createOnly && this.value);\r\n\r\n    if (!this.rootSchema) {\r\n      this.rootSchema = this.schema;\r\n      this.rootValue = this.value;\r\n      this.isRoot = true;\r\n    }\r\n\r\n    if (!this.schema.type) {\r\n      const p = this.schema.$ref;\r\n      const parts = p.split(\"#\");\r\n      if (parts.length === 1) {\r\n        // URL only\r\n        this.url(parts[0], null);\r\n      } else {\r\n        if (parts[0]) {\r\n          // URL + anchor\r\n          this.url(parts[0], parts[1]);\r\n        } else {\r\n          // local ref\r\n          this.schema = JsonPointer.jsonPointer(this.rootSchema, parts[1]);\r\n          this.setOrderedProperties();\r\n        }\r\n      }\r\n    } else {\r\n      this.setOrderedProperties();\r\n    }\r\n\r\n    if (typeof this.value === \"undefined\") {\r\n      if (this.schema.default) {\r\n        this.value = this.schema.default;\r\n        setTimeout(() => this.emit(this.value), 500);\r\n      } else {\r\n        if (!this.hideUndefined) {\r\n          this.value = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.getLayout() === \"custom\") {\r\n      this.loadComponent();\r\n    }\r\n\r\n    if (this.isRoot) {\r\n      setTimeout(() => {\r\n        this.errorChange.emit(this.recursiveError());\r\n      }, 10);\r\n    }\r\n\r\n    this.ch = this.service.displayWithRegistry[this.schema.displayWith];\r\n    if (!this.ch) {\r\n      this.ch = new DefaultChoiceHandler(this.http);\r\n    }\r\n    this.control = new FormControl(this.value);\r\n    this.choices = new ReplaySubject();\r\n    if (Array.isArray(this.value)) {\r\n      const arr = [];\r\n      for (const i of this.value) {\r\n        arr.push({ name: i, value: i });\r\n      }\r\n      this.choices.next(arr);\r\n    } else {\r\n      this.choices.next([{ name: this.value, value: this.value }]);\r\n    }\r\n    if (this.value || this.value === 0) {\r\n      if (Array.isArray(this.value)) {\r\n        const arr: Observable<Choice>[] = [];\r\n        for (const i of this.value) {\r\n          arr.push(this.ch.choice(i, this.schema));\r\n        }\r\n        forkJoin(arr).subscribe((res) => this.choices.next(res));\r\n      } else {\r\n        this.ch\r\n          .choice(this.value, this.schema)\r\n          .subscribe((res) => this.choices.next([res]));\r\n      }\r\n    }\r\n    this.filteredOptions = this.control.valueChanges.pipe(\r\n      startWith(this.value),\r\n      debounceTime(this.ch.debounceTime()),\r\n      switchMap((x) => {\r\n        this.change({ target: { value: x } });\r\n        return this.ch.filter(this.value, this.schema, x, this.choices);\r\n      })\r\n    );\r\n\r\n    this.edit = new Edit(\r\n      this.schemaChange,\r\n      this.name,\r\n      this.schema,\r\n      this.parentSchema,\r\n      this.dialog\r\n    );\r\n  }\r\n\r\n  /**\r\n   * choice element activated - load values\r\n   */\r\n  focus() {\r\n    this.ch.load(this.value, this.schema).subscribe((res) => {\r\n      this.choices.next(res);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * load schema from ref, apply pointer if needed\r\n   */\r\n  url(ref: string, pointer: string) {\r\n    // URL + anchor\r\n    this.base = this.base ? new URL(ref, this.base).href : ref;\r\n\r\n    // check root schema referenced map\r\n    if (this.rootSchema.referenced && this.rootSchema.referenced[this.base]) {\r\n      const res = this.rootSchema.referenced[this.base];\r\n      this.schema = pointer ? JsonPointer.jsonPointer(res, pointer) : res;\r\n      this.setOrderedProperties();\r\n      return;\r\n    }\r\n\r\n    this.http.get(this.base).subscribe(\r\n      (res) => {\r\n        this.schema = pointer ? JsonPointer.jsonPointer(res, pointer) : res;\r\n        this.setOrderedProperties();\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n\r\n    // set temporary pseudo schema\r\n    this.schema = { type: \"string\" };\r\n    this.setOrderedProperties();\r\n  }\r\n\r\n  /**\r\n   * emit valueChange event and also any validation error\r\n   */\r\n  emit(event: any) {\r\n    this.valueChange.emit(event);\r\n    if (this.isRoot) {\r\n      setTimeout(() => {\r\n        this.errorChange.emit(this.recursiveError());\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * if the schema changes from the outside,\r\n   * reset the component state wrt. errors and the choices cache\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.schema) {\r\n      if (changes.schema.previousValue) {\r\n        this.rootSchema = null;\r\n        if (this.widgetHost.viewContainerRef) {\r\n          this.widgetHost.viewContainerRef.clear();\r\n        }\r\n        this.ngOnInit();\r\n      }\r\n    }\r\n\r\n    if (changes.switch && !changes.switch.isFirstChange()) {\r\n      if (this.getLayout() === \"custom\") {\r\n        this.loadComponent();\r\n      } else {\r\n        if (this.widgetHost.viewContainerRef) {\r\n          this.widgetHost.viewContainerRef.clear();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * angular pipe sorting function for keyValue - keep the JSON order and do not\r\n   * order alphabetically\r\n   */\r\n  originalOrder = (\r\n    a: KeyValue<string, Schema>,\r\n    b: KeyValue<string, Schema>\r\n  ): number => {\r\n    return 0;\r\n  };\r\n\r\n  /**\r\n   * key method to instruct the display which HTML block to activate.\r\n   */\r\n  getLayout(): string {\r\n    if (this.schema.case && this.schema.case.indexOf(this.switch) < 0) {\r\n      return \"none\";\r\n    }\r\n    if (this.schema.widget === \"custom\") {\r\n      return \"custom\";\r\n    }\r\n    if (this.hideUndefined && this.value === undefined) {\r\n      return \"none\";\r\n    }\r\n    if (this.schema.type === \"object\") {\r\n      if (this.schema.additionalProperties) {\r\n        if (this.schema.layout === \"tab\") {\r\n          return \"additionalPropertiesTab\";\r\n        }\r\n        return \"additionalProperties\";\r\n      }\r\n      return \"object\";\r\n    }\r\n    if (this.schema.type === \"array\") {\r\n      if (this.schema.layout === \"tab\") {\r\n        return \"tab\";\r\n      }\r\n      if (this.schema.layout === \"table\") {\r\n        return \"table\";\r\n      }\r\n      if (this.schema.layout === \"select\") {\r\n        return \"array-select\";\r\n      }\r\n      if (this.schema.layout === \"chips\") {\r\n        return \"chips\";\r\n      }\r\n      return \"array\";\r\n    }\r\n    if (this.schema.enum) {\r\n      return \"enum\";\r\n    }\r\n    if (this.schema.widget === \"date\") {\r\n      return \"date\";\r\n    }\r\n    if (this.schema.widget === \"upload\") {\r\n      return \"upload\";\r\n    }\r\n    if (this.schema.widget === \"textarea\") {\r\n      return \"textarea\";\r\n    }\r\n    if (this.schema.type === \"boolean\") {\r\n      return \"checkbox\";\r\n    }\r\n    if (this.schema.choicesUrl) {\r\n      return \"autocomplete\";\r\n    }\r\n    if (this.schema.choices) {\r\n      return \"autocomplete\";\r\n    }\r\n    if (this.schema.displayWith) {\r\n      return \"autocomplete\";\r\n    }\r\n    return \"single\";\r\n  }\r\n\r\n  /**\r\n   * called from template in the \"simple\" type. If \"type\" is \"number\" or \"integer\",\r\n   * the HTML input type is \"number\" which avoids normal string input\r\n   */\r\n  getInputType(schema: Schema): string {\r\n    if (schema.type === \"number\") {\r\n      return \"number\";\r\n    }\r\n    if (schema.type === \"integer\") {\r\n      return \"number\";\r\n    }\r\n    return schema.widget;\r\n  }\r\n\r\n  /**\r\n   * event handler for object display. Catches the child component event and\r\n   * handle it by setting the value[key].\r\n   * Also init null objects with {}\r\n   */\r\n  onValueChange(key: string, value: any) {\r\n    if (!this.value) {\r\n      this.value = {};\r\n    }\r\n    this.value[key] = value;\r\n\r\n    if (this.schema.computed) {\r\n      for (const field of Object.keys(this.schema.computed)) {\r\n        const expression = this.schema.computed[field];\r\n        this.value[field] = jsonata(expression).evaluate(this.value);\r\n      }\r\n    }\r\n\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * add an element to an array.\r\n   * null arrays are initialized with []\r\n   */\r\n  add() {\r\n    if (!(this.value instanceof Array)) {\r\n      this.value = [];\r\n    }\r\n    if (this.schema.items.type === \"array\") {\r\n      this.value.push([]);\r\n    } else if (this.schema.items.type === \"object\") {\r\n      this.value.push({});\r\n    } else {\r\n      this.value.push(null);\r\n    }\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * event handler for adding a field\r\n   */\r\n  addField() {\r\n    if (!this.value) {\r\n      this.value = {};\r\n    }\r\n    if (this.value[\"\"]) {\r\n      return;\r\n    }\r\n    this.value[\"\"] = null;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * remove an element from an array\r\n   */\r\n  remove(i: number) {\r\n    this.value.splice(i, 1);\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * remove a field\r\n   */\r\n  removeField(key: string) {\r\n    delete this.value[key];\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * event handler for changed field names with \"additionalProperties\"\r\n   */\r\n  fieldNameChange(key: string, newvalue: any) {\r\n    this.value[newvalue] = this.value[key];\r\n    delete this.value[key];\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * returns the validation error on this level and call recursively for all children.\r\n   * returns null if the form contents is valid\r\n   */\r\n  recursiveError(): string {\r\n    const e = this.error();\r\n    if (e) {\r\n      return e;\r\n    }\r\n    if (this.child) {\r\n      return this.child.recursiveError();\r\n    }\r\n    if (this.children) {\r\n      for (const c of this.children) {\r\n        const r = c.recursiveError();\r\n        if (r) {\r\n          return r;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * return the error message provided in the schema or the generic error message\r\n   * returned from the validation code\r\n   */\r\n  e(error: string): string {\r\n    if (this.schema.errorMessage) {\r\n      return this.schema.errorMessage;\r\n    }\r\n    return error;\r\n  }\r\n\r\n  /**\r\n   * return error string\r\n   */\r\n  error(): string {\r\n    if (this.schema.widget === \"custom\") {\r\n      return this.customError;\r\n    }\r\n    if (this.schema.case && this.schema.case.indexOf(this.switch) < 0) {\r\n      return null;\r\n    }\r\n    if (this.value) {\r\n      if (this.schema.maxItems) {\r\n        if (!(this.value.length <= this.schema.maxItems)) {\r\n          return this.e(\r\n            \"Only \" + this.schema.maxItems + \" array entries allowed\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.uniqueItems) {\r\n        if (!(new Set(this.value).size === this.value.length)) {\r\n          return this.e(\"Array entries must be unique\");\r\n        }\r\n      }\r\n      if (this.schema.minItems) {\r\n        if (!(this.value.length >= this.schema.minItems)) {\r\n          return this.e(\r\n            \"At least \" + this.schema.minItems + \" array entries required\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.maxProperties) {\r\n        if (!(Object.keys(this.value).length <= this.schema.maxProperties)) {\r\n          return this.e(\r\n            \"Only \" + this.schema.maxProperties + \" fields allowed\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.propertyNames) {\r\n        for (const key of Object.keys(this.value)) {\r\n          const re = new RegExp(this.schema.propertyNames);\r\n          if (!re.test(key)) {\r\n            return this.e(\"illegal field name: \" + key);\r\n          }\r\n        }\r\n      }\r\n      if (this.schema.dependencies) {\r\n        for (const dep of Object.keys(this.schema.dependencies)) {\r\n          if (this.value[dep]) {\r\n            for (const l of this.schema.dependencies[dep]) {\r\n              if (!this.value[l]) {\r\n                return this.e(dep + \" depends on \" + l);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (this.schema.minProperties) {\r\n        if (!(Object.keys(this.value).length >= this.schema.minProperties)) {\r\n          return this.e(\r\n            \"At least \" + this.schema.minProperties + \" fields required\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.maxLength) {\r\n        if (!((\"\" + this.value).length <= this.schema.maxLength)) {\r\n          return this.e(\"Input is longer than \" + this.schema.maxLength);\r\n        }\r\n      }\r\n      if (this.schema.minLength) {\r\n        if (!((\"\" + this.value).length >= this.schema.minLength)) {\r\n          return this.e(\"Input is shorter than \" + this.schema.minLength);\r\n        }\r\n      }\r\n      if (this.schema.multipleOf) {\r\n        if (!Number.isInteger(Number(this.value) / this.schema.multipleOf)) {\r\n          return this.e(\"Must be multiple of \" + this.schema.multipleOf);\r\n        }\r\n      }\r\n      if (this.schema.exclusiveMaximum) {\r\n        if (!(Number(this.value) < this.schema.exclusiveMaximum)) {\r\n          return this.e(\"Must be less than \" + this.schema.exclusiveMaximum);\r\n        }\r\n      }\r\n      if (this.schema.maximum) {\r\n        if (!(Number(this.value) <= this.schema.maximum)) {\r\n          return this.e(\"Must be less than or equal \" + this.schema.maximum);\r\n        }\r\n      }\r\n      if (this.schema.exclusiveMinimum) {\r\n        if (!(Number(this.value) > this.schema.exclusiveMinimum)) {\r\n          return this.e(\"Must greater than \" + this.schema.exclusiveMinimum);\r\n        }\r\n      }\r\n      if (this.schema.minimum) {\r\n        if (!(Number(this.value) >= this.schema.minimum)) {\r\n          return this.e(\"Must greater than or equal \" + this.schema.minimum);\r\n        }\r\n      }\r\n    }\r\n    if (this.required) {\r\n      if (this.value == null || Object.is(this.value, NaN)) {\r\n        return this.e(\"required\");\r\n      }\r\n    }\r\n    if (this.schema.required) {\r\n      for (const dep of this.schema.required) {\r\n        if (\r\n          !this.value[dep] &&\r\n          this.value[dep] !== false &&\r\n          this.value[dep] !== 0\r\n        ) {\r\n          // ignore 'required' if dep is inactive due to switch / case\r\n          let inactive = false;\r\n          if (this.schema.switch) {\r\n            const switc = this.value[this.schema.switch];\r\n            if (switc && this.schema.properties[dep].case?.indexOf(switc) < 0) {\r\n              inactive = true;\r\n            }\r\n          }\r\n          if (!inactive) {\r\n            return this.e(dep + \" is required\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.schema.pattern) {\r\n      const re = new RegExp(this.schema.pattern);\r\n      if (!this.value) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n      if (!re.test(this.value)) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n    }\r\n    if (this.schema.format && this.service.formats[this.schema.format]) {\r\n      const re = new RegExp(this.service.formats[this.schema.format]);\r\n      if (!this.value) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n      if (!re.test(this.value)) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * use the element title if present, defaults to the label input or \"\" is both are null\r\n   */\r\n  getLabel(): string {\r\n    if (this.schema.title) {\r\n      return this.schema.title;\r\n    }\r\n    if (this.label) {\r\n      return this.label;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * input element change handler.\r\n   * normalize the different kind of events, handle the datatypes, set the value and emit the change\r\n   */\r\n  change(event: any) {\r\n    let eventTarget: any;\r\n\r\n    if (event instanceof MatSelectChange) {\r\n      event = event.value;\r\n    } else if (event instanceof MatDatepickerInputEvent) {\r\n      event = this.serializeDate(\r\n        event.value,\r\n        this.schema.dateFormat,\r\n        this.schema.type\r\n      );\r\n    } else if (event instanceof MatAutocompleteSelectedEvent) {\r\n      event = event.option.value;\r\n    } else if (event instanceof MatCheckboxChange) {\r\n      event = event.checked;\r\n    } else {\r\n      // save the event target in case the parsing changes the value\r\n      // (e.g. integer input 5.3 becomes 5, this is reflected on the UI via this handle)\r\n      eventTarget = event.target;\r\n      event = event.target.value;\r\n    }\r\n\r\n    if (event === \"\") {\r\n      event = null;\r\n    }\r\n\r\n    if (event == null) {\r\n      this.value = null;\r\n    }\r\n\r\n    if (this.schema.type === \"number\") {\r\n      this.value = parseFloat(event);\r\n    } else if (this.schema.type === \"integer\") {\r\n      this.value = parseInt(event, 10);\r\n    } else if (this.schema.type === \"boolean\") {\r\n      if (typeof event === \"string\") {\r\n        if (event === \"true\") {\r\n          this.value = true;\r\n        } else if (event === \"false\") {\r\n          this.value = false;\r\n        } else {\r\n          this.value = null;\r\n        }\r\n      } else {\r\n        this.value = event;\r\n      }\r\n    } else if (this.schema.type === \"string\") {\r\n      this.value = event;\r\n    } else if (this.schema.type === \"array\") {\r\n      this.value = event;\r\n    } else {\r\n      throw new Error(\"unknown type: \" + this.schema.type);\r\n    }\r\n\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * allows for the result of a file upload to be written into a text form element\r\n   */\r\n  handleFileInput(event: any) {\r\n    if (1024 * 1024 <= event.target.files.item(0).size) {\r\n      console.log(\"The file size is limited to 1MB\");\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.value = reader.result;\r\n      this.emit(this.value);\r\n    };\r\n   \r\n    reader.readAsDataURL(event.target.files.item(0));\r\n  }\r\n\r\n  /**\r\n   * get example values from example array and default\r\n   */\r\n  example(): string {\r\n    if (this.schema.examples && this.schema.examples[0]) {\r\n      return this.schema.examples[0];\r\n    }\r\n    if (this.schema.default) {\r\n      return this.schema.default;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * load the dynamic custom widget\r\n   */\r\n  loadComponent() {\r\n    const componentFactory =\r\n      this.componentFactoryResolver.resolveComponentFactory(\r\n        this.service.registry[this.schema.widgetType]\r\n      );\r\n    const viewContainerRef = this.widgetHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    const componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    // input values\r\n    (componentRef.instance as WidgetComponent).label = this.label;\r\n    (componentRef.instance as WidgetComponent).value = this.value;\r\n    (componentRef.instance as WidgetComponent).schema = this.schema;\r\n    (componentRef.instance as WidgetComponent).rootSchema = this.rootSchema;\r\n    (componentRef.instance as WidgetComponent).rootValue = this.rootValue;\r\n\r\n    // subscribe to value changes and forward them\r\n    (componentRef.instance as WidgetComponent).valueChange.subscribe((data) => {\r\n      this.value = data;\r\n      this.emit(this.value);\r\n    });\r\n\r\n    // subscribe to error changes and forward them\r\n    (componentRef.instance as WidgetComponent).errorChange.subscribe(\r\n      (error) => {\r\n        this.customError = error;\r\n        this.errorChange.emit(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * used for expansion panels - set value and forward event\r\n   */\r\n  setAndEmit(event: any) {\r\n    this.value = event;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * set an array element and emit value change event\r\n   */\r\n  setIndexAndEmit(i: number, event: any) {\r\n    this.value[i] = event;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * set an array element's field and emit value change event (applies to table layout)\r\n   */\r\n  setIndexAndEmitTable(i: number, field: string, event: any) {\r\n    this.value[i][field] = event;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * used when hideUndefined is active. Called from the UI to\r\n   * show a property with undefined value (in order to be able to set if in the form)\r\n   */\r\n  showProperty(prop: string) {\r\n    if (!this.value) {\r\n      this.value = {};\r\n    }\r\n    if (this.value[prop] === undefined) {\r\n      this.value[prop] = null;\r\n    } else if (this.value[prop] === null) {\r\n      this.value[prop] = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * used when hideUndefined is active. Called from the UI\r\n   * to determine which properties are included in the \"to add\" list\r\n   */\r\n  showPropertyList(): string[] {\r\n    if (this.schema.switch && this.value) {\r\n      const sw = this.value[this.schema.switch];\r\n      const props = [];\r\n      for (const [k, v] of Object.entries(this.schema.properties)) {\r\n        if (v.case) {\r\n          if (v.case.includes(sw)) {\r\n            props.push(k);\r\n          }\r\n        } else {\r\n          props.push(k);\r\n        }\r\n      }\r\n      return props.sort();\r\n    } else {\r\n      return Object.keys(this.schema.properties).sort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * string to date\r\n   * @param date    date string / number (millisecs since 1970)\r\n   * @param format  date format\r\n   */\r\n  parseDate(date: any, format: string): Date {\r\n    if (!date && date !== 0) {\r\n      return date;\r\n    }\r\n    if (typeof date === \"number\") {\r\n      return this.sameDate(new Date(date));\r\n    }\r\n    if (!format) {\r\n      return date;\r\n    }\r\n    const pdate = date.split(this.getDelimiter(format));\r\n    const pformat = format.split(this.getDelimiter(format));\r\n    return this.sameDate(\r\n      new Date(\r\n        pdate[pformat.indexOf(\"yyyy\")],\r\n        pdate[pformat.indexOf(\"MM\")] - 1,\r\n        pdate[pformat.indexOf(\"dd\")]\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * make sure to return the same date object instance (cannot delete date #83)\r\n   */\r\n  sameDate(nd: Date): Date {\r\n    if (!this.date) {\r\n      this.date = nd;\r\n    }\r\n    if (this.date.getTime() !== nd.getTime()) {\r\n      this.date = nd;\r\n    }\r\n    return this.date;\r\n  }\r\n\r\n  /**\r\n   * date to string\r\n   * @param date    the date to serialize\r\n   * @param format  the date format (e.g. dd-MM-yyyy)\r\n   * @param type    target datatype (allows serializing to millisecs since 1970)\r\n   */\r\n  serializeDate(date: Date, format: string, type: string): string {\r\n    if (date == null) {\r\n      return \"\";\r\n    }\r\n    if (type === \"integer\" || type === \"number\") {\r\n      return \"\" + date.valueOf();\r\n    }\r\n    if (!format) {\r\n      return date.toISOString();\r\n    }\r\n    const pformat = format.split(this.getDelimiter(format));\r\n    const pdate = [null, null, null];\r\n    pdate[pformat.indexOf(\"yyyy\")] = date.getFullYear();\r\n    pdate[pformat.indexOf(\"MM\")] = date.getMonth() + 1;\r\n    pdate[pformat.indexOf(\"dd\")] = date.getDate();\r\n    return (\r\n      pdate[0] +\r\n      this.getDelimiter(format) +\r\n      pdate[1] +\r\n      this.getDelimiter(format) +\r\n      pdate[2]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * find the first non letter character in a date format such as dd/MM/yyyy (returns /)\r\n   */\r\n  getDelimiter(format: string): string {\r\n    const delim = format.match(/\\W/g);\r\n    if (!delim[0]) {\r\n      throw new Error(\"No delimiter found in date format: \" + format);\r\n    }\r\n    return delim[0];\r\n  }\r\n\r\n  /**\r\n   * new chip entered\r\n   */\r\n  addChip(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || \"\").trim()) {\r\n      if (!this.value) {\r\n        this.value = [];\r\n      }\r\n      this.value.push(value.trim());\r\n      this.emit(this.value);\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = \"\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove a chip\r\n   */\r\n  removeChip(v: string): void {\r\n    const index = this.value.indexOf(v);\r\n    if (index >= 0) {\r\n      this.value.splice(index, 1);\r\n      if (this.value.length === 0) {\r\n        this.value = null;\r\n      }\r\n      this.emit(this.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * chips d&d handler\r\n   */\r\n  dropChip(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.value, event.previousIndex, event.currentIndex);\r\n    this.emit(this.value);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { WidgetDirective } from './widget.directive';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { EditElementDialogComponent } from './edit-element-dialog.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  declarations: [JsonSchemaFormComponent, EditElementDialogComponent, WidgetDirective],\r\n  imports: [\r\n    MatCardModule,\r\n    FlexLayoutModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatAutocompleteModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    DragDropModule\r\n  ],\r\n  exports: [JsonSchemaFormComponent],\r\n  providers: [\r\n    // turn off tooltip gestures on mobile: https://github.com/angular/components/issues/4892\r\n    { provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: { touchGestures: 'off' } }\r\n  ]\r\n\r\n})\r\nexport class JsonSchemaFormModule { }\r\n"]}