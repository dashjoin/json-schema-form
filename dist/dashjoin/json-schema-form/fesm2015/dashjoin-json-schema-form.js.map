{"version":3,"file":"dashjoin-json-schema-form.js","sources":["../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.service.ts","../../../../projects/dashjoin/json-schema-form/src/lib/widget.directive.ts","../../../../projects/dashjoin/json-schema-form/src/lib/json-pointer.ts","../../../../projects/dashjoin/json-schema-form/src/lib/choice.ts","../../../../projects/dashjoin/json-schema-form/src/lib/edit-element-dialog.component.ts","../../../../projects/dashjoin/json-schema-form/src/lib/edit-element-dialog.component.html","../../../../projects/dashjoin/json-schema-form/src/lib/edit.ts","../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.component.html","../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.component.ts","../../../../projects/dashjoin/json-schema-form/src/lib/json-schema-form.module.ts","../../../../projects/dashjoin/json-schema-form/src/public-api.ts","../../../../projects/dashjoin/json-schema-form/src/dashjoin-json-schema-form.ts"],"sourcesContent":["import { Injectable, Type } from '@angular/core';\r\nimport { ChoiceHandler } from './choice';\r\n\r\n/**\r\n * service for registering custom components\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JsonSchemaFormService {\r\n\r\n  /**\r\n   * layout editor mode\r\n   */\r\n  public editMode = false;\r\n\r\n  /**\r\n   * built-in formats\r\n   */\r\n  formats = {\r\n    email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    ipv4: /^(?!0)(?!.*\\.$)((1?\\d?\\d|25[0-5]|2[0-4]\\d)(\\.|$)){4}$/,\r\n    url: /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/,\r\n    uri: /^\\w+:(\\/?\\/?)[^\\s]+$/\r\n  };\r\n\r\n  /**\r\n   * registry of custom widgets. The keys are the values used in schema.widgetType, the values\r\n   * are the Type<any> of the custom widget component implementing WidgetComponent\r\n   */\r\n  registry = {};\r\n\r\n  /**\r\n   * registry of displayWith objects\r\n   */\r\n  displayWithRegistry: { [key: string]: ChoiceHandler } = {};\r\n\r\n  /**\r\n   * register custom component\r\n   * @param key     the name of the component which is used in schema extension: widget=custom, widgetType=key\r\n   * @param value   the implementation class\r\n   */\r\n  registerComponent(key: string, value: Type<any>) {\r\n    this.registry[key] = value;\r\n  }\r\n\r\n  /**\r\n   * register displayWith implementations\r\n   * @param key     the name of the implementation which is used in schema extension: displayWith=key\r\n   * @param value   the implementation class\r\n   */\r\n  registerDisplayWith(key: string, value: ChoiceHandler) {\r\n    this.displayWithRegistry[key] = value;\r\n  }\r\n}\r\n","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n/**\r\n * directive for dynamically loading custom widgets\r\n */\r\n@Directive({\r\n    selector: '[libWidgetHost]'\r\n})\r\nexport class WidgetDirective {\r\n\r\n    /**\r\n     * allow caller to dynamically insert custom component\r\n     * @param viewContainerRef  dynamic component handle\r\n     */\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","/**\r\n * static JsonPointer implementation\r\n */\r\nexport class JsonPointer {\r\n\r\n    /**\r\n     * evaluate the JSON pointer on o\r\n     */\r\n    static jsonPointer(o: any, pointer: string): any {\r\n        return JsonPointer.jsonPointer2(o, JsonPointer.split(pointer));\r\n    }\r\n\r\n    /**\r\n     * evaluate the JSON pointer (parsed array of paths) on o\r\n     */\r\n    static jsonPointer2(o: any, paths: string[]): any {\r\n\r\n        if (o === undefined) {\r\n            return undefined;\r\n        }\r\n\r\n        if (paths.length === 0) {\r\n            return o;\r\n        }\r\n\r\n        const path = paths[0];\r\n        const np = Object.assign([], paths);\r\n        np.splice(0, 1);\r\n\r\n        if (paths[0] === '*') {\r\n            const res = [];\r\n            for (const f of (typeof (o) === 'object' ? Object.values(o) : o)) {\r\n                res.push(this.jsonPointer2(f, np));\r\n            }\r\n            return res;\r\n        } else {\r\n            return this.jsonPointer2(o[path], np);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * strip leading / and split the JSON pointer\r\n     */\r\n    static split(s: string): string[] {\r\n        if (s === '') {\r\n            return [];\r\n        }\r\n        if (s.startsWith('/')) {\r\n            s = s.substring(1);\r\n            const arr = s.split('/');\r\n            for (const a of arr) {\r\n                if (a === '') {\r\n                    throw new Error('JSON Pointer must not contain an empty reference token');\r\n                }\r\n            }\r\n            return arr;\r\n        }\r\n        throw new Error('JSON Pointer must start with /');\r\n    }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { Schema } from './schema';\r\nimport { map, publishReplay, refCount, switchMap } from 'rxjs/operators';\r\nimport jsonata from 'jsonata';\r\n\r\n/**\r\n * class backing a select / autocomplete option\r\n */\r\nexport interface Choice {\r\n\r\n    /**\r\n     * select value\r\n     */\r\n    value: any;\r\n\r\n    /**\r\n     * display name\r\n     */\r\n    name: string;\r\n}\r\n\r\n/**\r\n * interface for choice handlers for select / autocomplete choices\r\n */\r\nexport interface ChoiceHandler {\r\n\r\n    /**\r\n     * loads the choices\r\n     */\r\n    load(value: any, schema: Schema): Observable<Choice[]>;\r\n\r\n    /**\r\n     * user typed in autocomplete field\r\n     */\r\n    filter(value: any, schema: Schema, current: string, choices: Observable<Choice[]>): Observable<Choice[]>;\r\n\r\n    /**\r\n     * return a single choice (i.e. convert value to Choice)\r\n     */\r\n    choice(value: any, schema: Schema): Observable<Choice>;\r\n\r\n    /**\r\n     * delay between keystrokes before new data is loaded\r\n     */\r\n    debounceTime(): number;\r\n}\r\n\r\n/**\r\n * default implementation that handles choices based on schema fields.\r\n * can be overriden via schema.displayWith\r\n */\r\nexport class DefaultChoiceHandler implements ChoiceHandler {\r\n\r\n    /**\r\n     * create default choice handler\r\n     *\r\n     * @param http      http connection client\r\n     */\r\n    constructor(private http: HttpClient) { }\r\n\r\n    /**\r\n     * http cache for REST request on config/Table (i.e. schema requests)\r\n     */\r\n    cache: Observable<Choice[]>;\r\n\r\n    /**\r\n     * load choices\r\n     */\r\n    load(value: any, schema: Schema): Observable<Choice[]> {\r\n\r\n        if (!this.cache) {\r\n            if (schema.choices) {\r\n                // static choices are given, convert them to Choice and merge the result\r\n                const arr: Observable<Choice>[] = [];\r\n                for (const s of schema.choices) {\r\n                    arr.push(this.choice(s, schema));\r\n                }\r\n                this.cache = forkJoin(arr);\r\n            } else {\r\n                // load choices from URL\r\n                this.cache = this.getChoices(schema.choicesUrl, schema.choicesUrlArgs, schema.choicesVerb).pipe(\r\n                    switchMap(res => {\r\n                        if (schema.jsonata) {\r\n                            res = jsonata(schema.jsonata).evaluate(res);\r\n                            if (!Array.isArray(res)) {\r\n                                res = [res];\r\n\r\n                                // introduce jsonName, jsonValue\r\n                            }\r\n                        }\r\n                        const obs: Observable<Choice>[] = [];\r\n                        for (const r of res) {\r\n                            obs.push(this.choice(r, schema));\r\n                        }\r\n                        return forkJoin(obs);\r\n                    }),\r\n\r\n                    // setup caching\r\n                    publishReplay(1),\r\n                    refCount()\r\n                );\r\n            }\r\n        }\r\n        return this.cache;\r\n    }\r\n\r\n    /**\r\n     * filter after keystroke\r\n     */\r\n    filter(value: any, schema: Schema, current: string, choices: Observable<Choice[]>): Observable<Choice[]> {\r\n        return choices.pipe(map(arr => {\r\n            if (!current) {\r\n                return arr;\r\n            }\r\n            const res = arr.filter(i => this.include(i, current));\r\n            return res;\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * called from filter, intended to allow subclasses to easily change filter algorithm\r\n     */\r\n    include(i: Choice, current: string): boolean {\r\n        return i.name?.toLowerCase().includes(current.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * default choice implementation: just reuse value as name\r\n     * check for localName\r\n     */\r\n    choice(value: any, schema: Schema): Observable<Choice> {\r\n        if (schema.displayWith === 'localName') {\r\n            for (const delimiter of ['/', '#', ':', '.']) {\r\n                const parts = value.split(delimiter);\r\n                if (parts.length > 1) {\r\n                    return of({ value, name: parts[parts.length - 1] });\r\n                }\r\n            }\r\n            return of({ value, name: value });\r\n        }\r\n        if (schema.jsonata) {\r\n            if (typeof value === 'object') {\r\n                return of(value);\r\n            } else {\r\n                // initially, value is a simple string\r\n                return of({ value, name: value });\r\n            }\r\n        }\r\n        if (schema.displayWithChoices) {\r\n            return of({ value, name: schema.displayWithChoices[schema.choices.indexOf(value)] });\r\n        }\r\n        return of({ value, name: value });\r\n    }\r\n\r\n    /**\r\n     * handle GET / POST\r\n     */\r\n    getChoices(url: string, args: any, verb: string): Observable<any> {\r\n        if (verb === 'GET') {\r\n            return this.http.get<any[]>(url, args);\r\n        } else {\r\n            return this.http.post<any[]>(url, args, {\r\n                headers: new HttpHeaders({\r\n                    'Content-Type': 'application/json',\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * default: no delay\r\n     */\r\n    debounceTime() {\r\n        return 0;\r\n    }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n/**\r\n * dialog to edit a JSON node in a layout structure\r\n */\r\n@Component({\r\n  selector: 'lib-edit-element-dialog',\r\n  templateUrl: './edit-element-dialog.component.html'\r\n})\r\nexport class EditElementDialogComponent {\r\n\r\n  /**\r\n   * dialog constrcutor\r\n   * @param dialogRef   disloag ref\r\n   * @param data        data to edit\r\n   */\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditElementDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.schema = {\r\n      title: 'Edit form',\r\n      layout: 'vertical',\r\n      order: [\r\n        ['widget', 'layout', 'itemlayout'],\r\n        ['title', 'description'],\r\n        ['example', 'readOnly'],\r\n        ['required', 'format', 'errorMessage'],\r\n        'choices', 'class', 'style'\r\n      ],\r\n      static: true,\r\n      type: 'object',\r\n      properties: {\r\n        // description, class, style are always applicable\r\n        description: { type: 'string', static: true, title: 'Description / tooltip' },\r\n        class: { type: 'array', items: { type: 'string' }, layout: 'chips', style: { width: '365px' }, static: true, title: 'CSS classes' },\r\n        style: { type: 'object', additionalProperties: { type: 'string' }, static: true, title: 'CSS styles' }\r\n      }\r\n    };\r\n\r\n    if (data.properties) {\r\n      // only show required and error message for objects\r\n      this.schema.properties.errorMessage = { type: 'string', static: true, title: 'Validation error message' };\r\n      this.schema.properties.required = {\r\n        choices: Object.keys(data.properties), type: 'array', layout: 'select', items: { type: 'string' }, static: true,\r\n        title: 'Required fields'\r\n      };\r\n      this.schema.properties.layout = { type: 'string', enum: ['vertical', 'horizontal'], static: true, title: 'Screen layout' };\r\n    } else {\r\n      if (data.items) {\r\n        this.schema.properties.layout = {\r\n          type: 'string', enum: ['vertical', 'horizontal', 'select', 'tab', 'table', 'chips'],\r\n          static: true, title: 'Screen Layout'\r\n        };\r\n        this.schema.properties.itemlayout = { type: 'string', enum: ['vertical', 'horizontal'], static: true, title: 'Item screen layout' };\r\n      }\r\n      if (data.items?.properties) {\r\n        // array of objects\r\n        this.schema.properties.errorMessage = { type: 'string', static: true, title: 'Validation error message' };\r\n        this.schema.properties.required = {\r\n          choices: Object.keys(data.items.properties), type: 'array', layout: 'select', items: { type: 'string' }, static: true,\r\n          title: 'Required fields'\r\n        };\r\n      } else {\r\n        // array of simple types\r\n        this.schema.properties.readOnly = {\r\n          type: 'boolean', static: true, title: 'Read only value', style: { 'padding-top': '15px' }\r\n        };\r\n        this.schema.properties.errorMessage = { type: 'string', static: true, title: 'Validation error message' };\r\n        this.schema.properties.format = {\r\n          type: 'string', static: true, title: 'Format',\r\n          widget: 'select', choices: [null, 'email', 'ipv4', 'url', 'uri']\r\n        };\r\n        this.schema.properties.example = { type: 'string', static: true, title: 'Example data' };\r\n        this.schema.properties.title = { type: 'string', static: true, title: 'Title' };\r\n        this.schema.properties.widget = {\r\n          type: 'string', enum: ['text', 'select', 'date', 'textarea', 'password'], static: true,\r\n          title: 'Form widget'\r\n        };\r\n        this.schema.properties.choices = {\r\n          type: 'array', items: { type: 'string' }, style: { width: '365px' },\r\n          layout: 'chips', static: true, title: 'Input choices'\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * schema to edit input form fields\r\n   */\r\n  schema: any;\r\n}\r\n","<mat-dialog-content style=\"padding-top: 10px;\">\r\n    <lib-json-schema-form [(value)]=\"data\" [schema]=\"schema\" [label]=\"schema.title\"></lib-json-schema-form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n    <button mat-button (click)=\"dialogRef.close()\">Cancel</button>\r\n    <button mat-raised-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button>\r\n</mat-dialog-actions>","import { EventEmitter } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { EditElementDialogComponent } from './edit-element-dialog.component';\r\nimport { Schema } from './schema';\r\n\r\n/**\r\n * form editor - has a 1:1 relationship to form node\r\n */\r\nexport class Edit {\r\n\r\n    /**\r\n     * get access to parent object's fields\r\n     *\r\n     * @param schemaChange  signal a change\r\n     * @param name          the current property name (key)\r\n     * @param schema        the current schema\r\n     * @param parent        the parent's schema (required in order to change the order)\r\n     * @param dialog        dialog service\r\n     */\r\n    constructor(\r\n        private schemaChange: EventEmitter<void>, private name: string, private schema: Schema, private parent: Schema,\r\n        private dialog: MatDialog) {\r\n    }\r\n\r\n    /**\r\n     * can add if addable is not empty\r\n     */\r\n    canAdd(): boolean {\r\n        return this.addable().length > 0;\r\n    }\r\n\r\n    /**\r\n     * get the entries in \"properties\" that are not in \"order\"\r\n     */\r\n    addable(): string[] {\r\n        let s: Schema;\r\n        if (this.schema.properties) {\r\n            s = this.schema;\r\n        } else if (this.schema.items?.properties) {\r\n            s = this.schema.items;\r\n        } else if (this.schema.additionalProperties?.properties) {\r\n            s = this.schema.additionalProperties;\r\n        } else {\r\n            return [];\r\n        }\r\n        if (s.order) {\r\n            const set = new Set(Object.keys(s.properties));\r\n            for (const p of s.order) {\r\n                if (Array.isArray(p)) {\r\n                    for (const q of p) {\r\n                        set.delete(q);\r\n                    }\r\n                } else {\r\n                    set.delete(p);\r\n                }\r\n            }\r\n            return Array.from(set);\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add a hidden prop to the end of the list\r\n     */\r\n    addSub(prop: string) {\r\n        const index = this.parent.order.indexOf(this.name);\r\n        if (index >= 0) {\r\n            this.parent.order[index] = [(this.parent.order[index] as string), prop];\r\n        } else {\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    if (p.indexOf(this.name) >= 0) {\r\n                        p.push(prop);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * can add if addable is not empty\r\n     */\r\n    canAddSub(): boolean {\r\n        return this.subaddable().length > 0;\r\n    }\r\n\r\n    /**\r\n     * get the entries in \"properties\" that are not in \"order\"\r\n     */\r\n    subaddable(): string[] {\r\n        if (this.parent?.order) {\r\n            const set = new Set(Object.keys(this.parent.properties));\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    for (const q of p) {\r\n                        set.delete(q);\r\n                    }\r\n                } else {\r\n                    set.delete(p);\r\n                }\r\n            }\r\n            return Array.from(set);\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * add a hidden prop to the end of the list\r\n     */\r\n    add(prop: string) {\r\n        if (this.schema.properties) {\r\n            this.schema.order.push(prop);\r\n        } else if (this.schema.items?.properties) {\r\n            this.schema.items.order.push(prop);\r\n        } else {\r\n            this.schema.additionalProperties.order.push(prop);\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * edit simple schema fields like title and description\r\n     */\r\n    edit() {\r\n        // deep clone object so we have the possibility to cancel editing\r\n        const clone = JSON.parse(JSON.stringify(this.schema));\r\n\r\n        // handle (array) example\r\n        if (clone.items?.examples?.length > 0) {\r\n            clone.example = clone.items.examples[0];\r\n        }\r\n        if (clone.examples?.length > 0) {\r\n            clone.example = clone.examples[0];\r\n        }\r\n\r\n        // text is default\r\n        if (!clone.widget) {\r\n            clone.widget = 'text';\r\n        }\r\n\r\n        // horizontal is default\r\n        if (!clone.layout) {\r\n            clone.layout = 'horizontal';\r\n        }\r\n\r\n        // array: apply choices and widget to items\r\n        if (clone.items) {\r\n            clone.widget = clone.items.widget;\r\n            clone.choices = clone.items.choices;\r\n            clone.errorMessage = clone.items.errorMessage;\r\n            clone.format = clone.items.format;\r\n            clone.required = clone.items.required;\r\n            clone.itemlayout = clone.items.layout;\r\n        }\r\n\r\n        const dialogRef = this.dialog.open(EditElementDialogComponent, { minWidth: '50%', data: clone });\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data) {\r\n                this.schema.title = data.title;\r\n                this.schema.description = data.description;\r\n                this.schema.widget = data.widget;\r\n                this.schema.layout = data.layout;\r\n                this.schema.readOnly = data.readOnly;\r\n                this.schema.errorMessage = data.errorMessage;\r\n                if (data.example) {\r\n                    if (data.items) {\r\n                        this.schema.items.examples = [data.example];\r\n                    } else {\r\n                        this.schema.examples = [data.example];\r\n                    }\r\n                }\r\n                if (data.style) {\r\n                    delete data.style[''];\r\n                }\r\n                if (data.style && Object.keys(data.style).length > 0) {\r\n                    this.schema.style = data.style;\r\n                }\r\n                if (data.class) {\r\n                    data.class = data.class.filter(el => el != null);\r\n                }\r\n                if (data.class?.length > 0) {\r\n                    this.schema.class = data.class;\r\n                }\r\n                if (data.items) {\r\n                    if (data.choices?.length > 0) {\r\n                        this.schema.items.choices = data.choices;\r\n                    }\r\n                    this.schema.items.widget = data.widget;\r\n                    this.schema.items.format = data.format;\r\n                    this.schema.items.errorMessage = data.errorMessage;\r\n                    this.schema.items.required = data.required;\r\n                    this.schema.items.layout = data.itemlayout;\r\n                } else {\r\n                    this.schema.choices = data.choices;\r\n                    this.schema.widget = data.widget;\r\n                    this.schema.format = data.format;\r\n                    this.schema.errorMessage = data.errorMessage;\r\n                    this.schema.required = data.required;\r\n                }\r\n                this.schemaChange.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * can hide if I my parent is an object\r\n     */\r\n    canHide(): boolean {\r\n        return this.parent ? true : false;\r\n    }\r\n\r\n    /**\r\n     * hide this prop\r\n     */\r\n    hide() {\r\n        if (!this.parent.order) {\r\n            this.parent.order = Object.keys(this.parent.properties);\r\n        }\r\n        let index = 0;\r\n        for (const p of this.parent.order) {\r\n            if (Array.isArray(p)) {\r\n                if (p.indexOf(this.name) >= 0) {\r\n                    p.splice(p.indexOf(this.name), 1);\r\n                    if (p.length === 1) {\r\n                        this.parent.order[index] = p[0];\r\n                    }\r\n                }\r\n            }\r\n            index++;\r\n        }\r\n        if (this.parent.order.indexOf(this.name) >= 0) {\r\n            this.parent.order.splice(this.parent.order.indexOf(this.name), 1);\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * can I go up\r\n     */\r\n    canUp(): boolean {\r\n        if (!this.parent) {\r\n            return false;\r\n        }\r\n        const props = this.parent.order ? this.parent.order : Object.keys(this.parent.properties);\r\n        const index = props.indexOf(this.name);\r\n        if (index >= 0) {\r\n            return index > 0;\r\n        } else {\r\n            for (const p of props) {\r\n                if (Array.isArray(p)) {\r\n                    if (p.indexOf(this.name) >= 0) {\r\n                        return p.indexOf(this.name) > 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * go up\r\n     */\r\n    up() {\r\n        if (!this.parent.order) {\r\n            this.parent.order = Object.keys(this.parent.properties);\r\n        }\r\n        let index = this.parent.order.indexOf(this.name);\r\n        if (index >= 0) {\r\n            const tmp = this.parent.order[index - 1];\r\n            this.parent.order[index - 1] = this.parent.order[index];\r\n            this.parent.order[index] = tmp;\r\n        } else {\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    index = p.indexOf(this.name);\r\n                    if (index >= 0) {\r\n                        const tmp = p[index - 1];\r\n                        p[index - 1] = p[index];\r\n                        p[index] = tmp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n\r\n    /**\r\n     * can I go down\r\n     */\r\n    canDown(): boolean {\r\n        if (!this.parent) {\r\n            return false;\r\n        }\r\n        const props = this.parent.order ? this.parent.order : Object.keys(this.parent.properties);\r\n        const index = props.indexOf(this.name);\r\n        if (index >= 0) {\r\n            return index < props.length - 1;\r\n        } else {\r\n            for (const p of props) {\r\n                if (Array.isArray(p)) {\r\n                    if (p.indexOf(this.name) >= 0) {\r\n                        return p.indexOf(this.name) < p.length - 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * go down\r\n     */\r\n    down() {\r\n        if (!this.parent.order) {\r\n            this.parent.order = Object.keys(this.parent.properties);\r\n        }\r\n        let index = this.parent.order.indexOf(this.name);\r\n        if (index >= 0) {\r\n            const tmp = this.parent.order[index + 1];\r\n            this.parent.order[index + 1] = this.parent.order[index];\r\n            this.parent.order[index] = tmp;\r\n        } else {\r\n            for (const p of this.parent.order) {\r\n                if (Array.isArray(p)) {\r\n                    index = p.indexOf(this.name);\r\n                    if (index >= 0) {\r\n                        const tmp = p[index + 1];\r\n                        p[index + 1] = p[index];\r\n                        p[index] = tmp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.schemaChange.emit();\r\n    }\r\n}\r\n","<mat-expansion-panel *ngIf=\"(schema.expanded === true || schema.expanded === false) && !inExpansion\"\r\n  [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\" [expanded]=\"schema.expanded\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>{{label}}</mat-panel-title>\r\n    <mat-panel-description>{{schema.description}}</mat-panel-description>\r\n  </mat-expansion-panel-header>\r\n  <lib-json-schema-form #child [label]=\"label\" [name]=\"name\" [value]=\"value\" (valueChange)=\"setAndEmit($event)\"\r\n    [switch]=\"switch\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema\" [inExpansion]=\"true\"\r\n    [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n  </lib-json-schema-form>\r\n</mat-expansion-panel>\r\n\r\n<div *ngIf=\"(schema.expanded === null || schema.expanded === undefined) || inExpansion\"\r\n  [matTooltip]=\"schema.description\">\r\n\r\n  <div *ngIf=\"service.editMode && !schema.static && !inArray && getLayout() !== 'none'\">\r\n    <mat-icon style=\"cursor: pointer\" [matMenuTriggerFor]=\"menu\"\r\n      [matTooltip]=\"name ? 'Form element '+name : (isRoot ? 'Form root' : '')\">\r\n      more_vert\r\n    </mat-icon>\r\n\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button mat-menu-item (click)=\"edit.edit()\">\r\n        <mat-icon>edit</mat-icon>Edit\r\n      </button>\r\n      <button [disabled]=\"!edit.canAdd()\" mat-menu-item [matMenuTriggerFor]=\"madd\">\r\n        <mat-icon>add</mat-icon>Show\r\n      </button>\r\n      <button [disabled]=\"!edit.canAddSub()\" mat-menu-item [matMenuTriggerFor]=\"madd2\">\r\n        <mat-icon>playlist_add</mat-icon>Show inline\r\n      </button>\r\n      <button [disabled]=\" !edit.canHide()\" mat-menu-item (click)=\"edit.hide()\">\r\n        <mat-icon>remove</mat-icon>Hide\r\n      </button>\r\n      <button [disabled]=\"!edit.canUp()\" mat-menu-item (click)=\"edit.up()\">\r\n        <mat-icon>north_west</mat-icon>Up / Left\r\n      </button>\r\n      <button [disabled]=\"!edit.canDown()\" mat-menu-item (click)=\"edit.down()\">\r\n        <mat-icon>south_east</mat-icon>Down / Right\r\n      </button>\r\n    </mat-menu>\r\n\r\n    <mat-menu #madd=\"matMenu\">\r\n      <button *ngFor=\"let x of edit.addable()\" mat-menu-item (click)=\"edit.add(x)\">{{x}}</button>\r\n    </mat-menu>\r\n\r\n    <mat-menu #madd2=\"matMenu\">\r\n      <button *ngFor=\"let x of edit.subaddable()\" mat-menu-item (click)=\"edit.addSub(x)\">{{x}}</button>\r\n    </mat-menu>\r\n  </div>\r\n\r\n  <!-- object row wrap layout -->\r\n  <span *ngIf=\"getLayout() === 'object'\" [fxLayout]=\"schema.layout === 'vertical' ? 'column' : 'row wrap'\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <div *ngFor=\"let op of orderedProperties\" [fxLayout]=\"schema.layout !== 'vertical' ? 'column' : 'row wrap'\">\r\n      <div *ngFor=\" let x of op | keyvalue:originalOrder\" style=\"display: flex; margin: 2px\">\r\n        <div *ngIf=\"x.value && (x.value.type || x.value.$ref)\">\r\n          <lib-json-schema-form #children [name]=\"x.key\" [label]=\"x.value.title ? x.value.title : x.key\"\r\n            [value]=\"value ? value[x.key] : undefined\" (valueChange)=\"onValueChange(x.key, $event)\"\r\n            [switch]=\"value ? value[schema.switch] : undefined\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\"\r\n            [schema]=\"x.value\" [parentSchema]=\"schema\"\r\n            [required]=\"schema.required ? schema.required.includes(x.key) : false\"\r\n            [hideUndefined]=\"schema.hideUndefined\" [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n          </lib-json-schema-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"schema.hideUndefined\" style=\"margin-right: 20px;\">\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n        <mat-icon>more_vert</mat-icon>\r\n      </button>\r\n      <mat-menu #menu=\"matMenu\">\r\n        <div *ngFor=\"let x of showPropertyList()\">\r\n          <mat-checkbox [disabled]=\"value ? value[x] : false\" [checked]=\"value && (value[x] !== undefined)\"\r\n            (change)=\"showProperty(x)\">\r\n            {{x}}\r\n          </mat-checkbox>\r\n        </div>\r\n      </mat-menu>\r\n    </div>\r\n  </span>\r\n\r\n  <!-- additional properties -->\r\n  <span *ngIf=\"getLayout() === 'additionalProperties'\" [fxLayout]=\"schema.layout === 'vertical' ? 'column' : 'row wrap'\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <div *ngFor=\"let x of value | keyvalue:originalOrder; let i=index\"\r\n      style=\"display: flex; margin: 2px; position: relative\" (mouseenter)=\"hover=i\" (mouseleave)=\"hover=null\">\r\n      <mat-form-field>\r\n        <mat-label>{{getLabel()}} key</mat-label>\r\n        <input [disabled]=\"readOnly\" autocomplete=\"off\" matInput [value]=\"x.key\"\r\n          (change)=\"fieldNameChange(x.key, $event.target.value)\">\r\n      </mat-form-field>\r\n      &nbsp;\r\n      <lib-json-schema-form #children [label]=\"getLabel() + ' value'\" [value]=\"value[x.key]\"\r\n        (valueChange)=\"onValueChange(x.key, $event)\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\"\r\n        [schema]=\"schema.additionalProperties\" inArray=\"true\" [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"removeField(x.key)\" class=\"example-handle\"\r\n        matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </div>\r\n    <button *ngIf=\"!readOnly\" mat-icon-button (click)=\" addField()\" matTooltip=\"{{getLabel()}}\">\r\n      <mat-icon>add_circle_outline</mat-icon>\r\n    </button>\r\n  </span>\r\n\r\n  <!-- additional properties tab layout -->\r\n  <mat-tab-group animationDuration=\"0ms\" *ngIf=\"getLayout() === 'additionalPropertiesTab'\" style=\"max-width: 96vw\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <mat-tab *ngFor=\"let x of value | keyvalue:originalOrder; let i=index\" style=\"margin: 2px; position: relative\">\r\n      <ng-template mat-tab-label>\r\n        <mat-form-field *ngIf=\"!readOnly\">\r\n          <input autocomplete=\"off\" matInput [value]=\"x.key\" (change)=\"fieldNameChange(x.key, $event.target.value)\">\r\n        </mat-form-field>\r\n        <span *ngIf=\"readOnly\">{{x.key}}</span>\r\n      </ng-template>\r\n      <lib-json-schema-form #children [value]=\"value[x.key]\" (valueChange)=\"onValueChange(x.key, $event)\"\r\n        [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.additionalProperties\" inArray=\"true\"\r\n        [base]=\"base\" (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"removeField(x.key)\" class=\"example-handle\"\r\n        matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"!readOnly\">\r\n      <ng-template mat-tab-label>\r\n        <button mat-icon-button (click)=\"addField()\" matTooltip=\"{{getLabel()}}\">\r\n          <mat-icon>add_circle_outline</mat-icon>\r\n        </button>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <!-- array row wrap layout -->\r\n  <span *ngIf=\"getLayout() === 'array'\" [fxLayout]=\"schema.layout === 'vertical' ? 'column' : 'row wrap'\"\r\n    [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <div *ngFor=\"let x of value; let i=index\" style=\"display: flex; margin: 2px; position: relative\"\r\n      (mouseenter)=\"hover=i\" (mouseleave)=\"hover=null\">\r\n      <lib-json-schema-form #children [label]=\"getLabel()\" [value]=\"value[i]\" (valueChange)=\"setIndexAndEmit(i, $event)\"\r\n        inArray=\"true\" [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.items\" [base]=\"base\"\r\n        (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"remove(i)\" class=\"example-handle\" matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </div>\r\n    <button *ngIf=\"!readOnly\" mat-icon-button (click)=\" add()\" matTooltip=\"{{getLabel()}}\">\r\n      <mat-icon>add_circle_outline</mat-icon>\r\n    </button>\r\n  </span>\r\n\r\n  <!-- array chips layout -->\r\n  <span *ngIf=\"getLayout() === 'chips'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-chip-list #chipList aria-label=\"Fruit selection\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n        (cdkDropListDropped)=\"dropChip($event)\">\r\n        <mat-chip *ngFor=\"let v of value\" [removable]=\"!readOnly\" (removed)=\"removeChip(v)\" cdkDrag>\r\n          {{v}}\r\n          <mat-icon matChipRemove>cancel</mat-icon>\r\n        </mat-chip>\r\n        <input [placeholder]=\"schema.title\" autocomplete=\"off\" [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" (matChipInputTokenEnd)=\"addChip($event)\"\r\n          [disabled]=\"readOnly\">\r\n      </mat-chip-list>\r\n    </mat-form-field>\r\n  </span>\r\n\r\n  <!-- array tab layout -->\r\n  <mat-tab-group animationDuration=\"0ms\" *ngIf=\"getLayout() === 'tab'\" style=\"max-width: 96vw\" [ngStyle]=\"schema.style\"\r\n    [ngClass]=\"schema.class\">\r\n    <mat-tab *ngFor=\"let x of value; let i=index\" style=\"margin: 2px; position: relative\" [label]=\"getLabel()+' '+i\">\r\n      <lib-json-schema-form #children [value]=\"value[i]\" (valueChange)=\"setIndexAndEmit(i, $event)\" inArray=\"true\"\r\n        [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.items\" [base]=\"base\"\r\n        (schemaChange)=\"schemaChange.emit()\">\r\n      </lib-json-schema-form>\r\n      <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"remove(i)\" class=\"example-handle\" matTooltip=\"{{getLabel()}}\">\r\n        <mat-icon>remove_circle_outline</mat-icon>\r\n      </button>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"!readOnly\">\r\n      <ng-template mat-tab-label>\r\n        <button mat-icon-button (click)=\" add()\" matTooltip=\"{{getLabel()}}\">\r\n          <mat-icon>add_circle_outline</mat-icon>\r\n        </button>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n  <!-- array table layout -->\r\n  <span *ngIf=\"getLayout() === 'table'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n    <table summary=\"Properties table\">\r\n      <tr>\r\n        <th *ngFor=\"let x of schema.items.properties | keyvalue:originalOrder\" scope=\"col\">\r\n          {{x.value.title ? x.value.title : x.key}}</th>\r\n        <th id=\"remove_row\"></th>\r\n      </tr>\r\n      <tr *ngFor=\"let row of value; let i=index\">\r\n        <td *ngFor=\"let x of schema.items.properties | keyvalue:originalOrder\">\r\n          <lib-json-schema-form #children [value]=\"row[x.key]\" (valueChange)=\"setIndexAndEmitTable(i, x.key, $event)\"\r\n            [rootValue]=\"rootValue\" [rootSchema]=\"rootSchema\" [schema]=\"schema.items.properties[x.key]\" [base]=\"base\"\r\n            (schemaChange)=\"schemaChange.emit()\">\r\n          </lib-json-schema-form>\r\n        </td>\r\n        <td>\r\n          <button *ngIf=\"!readOnly\" mat-icon-button (click)=\"remove(i)\" matTooltip=\"{{getLabel()}}\">\r\n            <mat-icon>remove_circle_outline</mat-icon>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <button *ngIf=\"!readOnly\" mat-icon-button (click)=\" add()\" matTooltip=\"{{getLabel()}}\">\r\n      <mat-icon>add_circle_outline</mat-icon>\r\n    </button>\r\n  </span>\r\n\r\n  <!-- enum -->\r\n  <div *ngIf=\"getLayout() === 'enum'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <mat-select [value]=\"value\" (selectionChange)=\"change($event)\" [disabled]=\"readOnly\">\r\n        <mat-option *ngFor=\"let x of schema.enum\" [value]=\"x\">{{x}}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- array-select -->\r\n  <div *ngIf=\"getLayout() === 'array-select'\">\r\n    <mat-form-field [matTooltip]=\"schema.description\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <mat-select multiple [value]=\"value\" (focus)=\"focus()\" (selectionChange)=\"change($event)\" [disabled]=\"readOnly\">\r\n        <mat-option *ngFor=\"let choice of choices | async\" [value]=\"choice.value\"\r\n          [matTooltip]=\"choice.name !== choice.value ? choice.value : null\">\r\n          {{choice.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- date element -->\r\n  <div *ngIf=\"getLayout() === 'date'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <input autocomplete=\"off\" matInput [value]=\"parseDate(value, schema.dateFormat)\" (dateChange)=\"change($event)\"\r\n        [matDatepicker]=\"picker\" [disabled]=\"readOnly\" style=\"width: 100%\">\r\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n      <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- checkbox element -->\r\n  <div *ngIf=\"getLayout() === 'checkbox'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"\r\n    style=\"margin: 6px; margin-top: 12px;\">\r\n    <mat-checkbox [checked]=\"value\" (change)=\"change($event)\" [disabled]=\"readOnly\">\r\n      {{label}}</mat-checkbox>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- autocomplete element -->\r\n  <div *ngIf=\"getLayout() === 'autocomplete'\">\r\n    <mat-form-field *ngIf=\"schema.widget === 'select'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <mat-select [value]=\"value\" (focus)=\"focus()\" (selectionChange)=\"change($event)\" [disabled]=\"readOnly\">\r\n        <mat-option *ngFor=\"let choice of choices | async\" [value]=\"choice.value\"\r\n          [matTooltip]=\"choice.name !== choice.value ? choice.value : null\">\r\n          {{choice.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field *ngIf=\"schema.widget !== 'select'\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <input type=\"text\" matInput [formControl]=\"control\" [matAutocomplete]=\"auto\" (focus)=\"focus()\">\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let choice of filteredOptions | async\" [value]=\"choice.value\"\r\n          [matTooltip]=\"choice.name !== choice.value ? choice.value : null\">\r\n          {{choice.name}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- single element -->\r\n  <div *ngIf=\"getLayout() === 'single'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <input *ngIf=\"!inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" autocomplete=\"off\" matInput\r\n        [type]=\"getInputType(schema)\" [value]=\"value\" (input)=\"change($event)\"\r\n        (focus)=\"getInputType(schema) == 'password' ? value = '':''\">\r\n      <input *ngIf=\"inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" autocomplete=\"off\" matInput\r\n        [type]=\"getInputType(schema)\" [value]=\"value\" (change)=\"change($event)\">\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- textarea element -->\r\n  <div *ngIf=\"getLayout() === 'textarea'\">\r\n    <mat-form-field [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\">\r\n      <mat-label>{{label}}</mat-label>\r\n      <textarea *ngIf=\"!inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" matInput [value]=\"value\"\r\n        (input)=\"change($event)\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"></textarea>\r\n      <textarea *ngIf=\"inArray\" [disabled]=\"readOnly\" [placeholder]=\"example()\" matInput [value]=\"value\"\r\n        (change)=\"change($event)\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"></textarea>\r\n    </mat-form-field>\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n\r\n  <!-- upload -->\r\n  <div *ngIf=\"getLayout() === 'upload'\">\r\n    <input type=\"file\" id=\"file\" (change)=\"handleFileInput($event)\" [ngStyle]=\"schema.style\" [ngClass]=\"schema.class\"\r\n      [disabled]=\"readOnly\">\r\n    <p class=\"error mat-typography\">{{error()}}</p>\r\n  </div>\r\n</div>\r\n<ng-template libWidgetHost></ng-template>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewChildren,\r\n  QueryList,\r\n} from \"@angular/core\";\r\nimport { MatSelectChange } from \"@angular/material/select\";\r\nimport { MatDatepickerInputEvent } from \"@angular/material/datepicker\";\r\nimport { MatCheckboxChange } from \"@angular/material/checkbox\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { forkJoin, Observable, ReplaySubject } from \"rxjs\";\r\nimport { KeyValue } from \"@angular/common\";\r\nimport { Schema } from \"./schema\";\r\nimport { WidgetComponent } from \"./widget.component\";\r\nimport { WidgetDirective } from \"./widget.directive\";\r\nimport { JsonSchemaFormService } from \"./json-schema-form.service\";\r\nimport { MatAutocompleteSelectedEvent } from \"@angular/material/autocomplete\";\r\nimport { JsonPointer } from \"./json-pointer\";\r\nimport { Choice, ChoiceHandler, DefaultChoiceHandler } from \"./choice\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { debounceTime, startWith, switchMap } from \"rxjs/operators\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Edit } from \"./edit\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\r\nimport { COMMA, ENTER, TAB } from \"@angular/cdk/keycodes\";\r\nimport jsonata from \"jsonata\";\r\n\r\n/**\r\n * generates an input form base on JSON schema and JSON object.\r\n * The component is used recursively.\r\n */\r\n@Component({\r\n  selector: \"lib-json-schema-form\",\r\n  templateUrl: \"./json-schema-form.component.html\",\r\n  styleUrls: [\"./json-schema-form.component.css\"],\r\n})\r\nexport class JsonSchemaFormComponent implements OnInit, OnChanges {\r\n  /**\r\n   * component constructor\r\n   * @param http                        http client\r\n   * @param componentFactoryResolver    allows dynamic components\r\n   * @param service                     application service for registering components etc.\r\n   * @param dialog                      dialog service\r\n   */\r\n  constructor(\r\n    private http: HttpClient,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    public service: JsonSchemaFormService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  /**\r\n   * container children for event propagation\r\n   */\r\n  @ViewChildren(\"children\") children: QueryList<JsonSchemaFormComponent>;\r\n\r\n  /**\r\n   * container children for event propagation\r\n   */\r\n  @ViewChild(\"child\") child: JsonSchemaFormComponent;\r\n\r\n  /**\r\n   * if an array is displayed, indicates which array index is being hovered over in order to\r\n   * display the \"-\" remove button\r\n   */\r\n  hover: number;\r\n\r\n  /**\r\n   * the name of the input field (only set if inside type: object)\r\n   */\r\n  @Input() name: string;\r\n\r\n  /**\r\n   * the label of the input field\r\n   */\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * the input value\r\n   */\r\n  @Input() value: any;\r\n\r\n  /**\r\n   * root form value (can be used in custom components)\r\n   */\r\n  @Input() rootValue: any;\r\n\r\n  /**\r\n   * emit changes done by the user in the component\r\n   */\r\n  @Output() valueChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * emit whether this part of the form is valid\r\n   */\r\n  @Output() errorChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  /**\r\n   * indicate schema changes done via the layout editor\r\n   */\r\n  @Output() schemaChange: EventEmitter<void> = new EventEmitter();\r\n\r\n  /**\r\n   * JSON schema to use\r\n   */\r\n  @Input() schema: Schema;\r\n\r\n  /**\r\n   * parent schema to edit required\r\n   */\r\n  @Input() parentSchema: Schema;\r\n\r\n  /**\r\n   * form editor\r\n   */\r\n  edit: Edit;\r\n\r\n  /**\r\n   * root JSON schema to use when looking up $ref (simply passed along the tree)\r\n   */\r\n  @Input() rootSchema: Schema;\r\n\r\n  /**\r\n   * base URL for resolving $ref\r\n   */\r\n  @Input() base: string;\r\n\r\n  /**\r\n   * indicates whether this is the root of the component tree\r\n   */\r\n  isRoot = false;\r\n\r\n  /**\r\n   * if present: value of the switch property that determines whether this component renders itself\r\n   * (schema.case not present or schema.case === switch)\r\n   */\r\n  @Input() switch: string;\r\n\r\n  /**\r\n   * indicates to child components whether the parent object has hideUndefined set (i.e. do not render yourself\r\n   * if your value is undefined)\r\n   */\r\n  @Input() hideUndefined: boolean;\r\n\r\n  /**\r\n   * are we already in the expansion panel?\r\n   */\r\n  @Input() inExpansion: boolean;\r\n\r\n  /**\r\n   * are we already in an array?\r\n   */\r\n  @Input() inArray: boolean;\r\n\r\n  /**\r\n   * required imported from parent\r\n   */\r\n  @Input() required: boolean;\r\n\r\n  /**\r\n   * hook for custom widgets\r\n   */\r\n  @ViewChild(WidgetDirective, { static: true }) widgetHost: WidgetDirective;\r\n\r\n  /**\r\n   * order field transforms properties into this structure.\r\n   * allows omission, ordering and hierarchy\r\n   */\r\n  orderedProperties: { [key: string]: Schema }[];\r\n\r\n  /**\r\n   * make sure to return the same date object instance (cannot delete date #83)\r\n   */\r\n  date: Date;\r\n\r\n  /**\r\n   * choices that might be loaded async, initialized with current value and its potentially delayed toString value\r\n   */\r\n  choices: ReplaySubject<Choice[]>;\r\n\r\n  /**\r\n   * autocomplete filtered choices\r\n   */\r\n  filteredOptions: Observable<Choice[]>;\r\n\r\n  /**\r\n   * autocomplete form control for simpler change detection\r\n   */\r\n  control: FormControl;\r\n\r\n  /**\r\n   * implementation specified in displayWith\r\n   */\r\n  ch: ChoiceHandler;\r\n\r\n  /**\r\n   * complete chip entry with enter or comma\r\n   */\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA, TAB];\r\n\r\n  /**\r\n   * readOnly if schema.readOnly or schema.createOnly and value set\r\n   */\r\n  readOnly: boolean;\r\n\r\n  /**\r\n   * error from a custom component\r\n   */\r\n  customError: string;\r\n\r\n  /**\r\n   * apply order, called anytime properties are set\r\n   */\r\n  setOrderedProperties() {\r\n    if (this.schema.order) {\r\n      this.orderedProperties = [];\r\n      for (const p of this.schema.order) {\r\n        const arr = Array.isArray(p) ? p : [p];\r\n        const o = {};\r\n        for (const q of arr) {\r\n          o[q] = this.schema.properties[q];\r\n        }\r\n        this.orderedProperties.push(o);\r\n      }\r\n    } else if (this.schema.properties) {\r\n      this.orderedProperties = [];\r\n      for (const [key, value] of Object.entries(this.schema.properties)) {\r\n        const o = {};\r\n        o[key] = value;\r\n        this.orderedProperties.push(o);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * initialize the comonent.\r\n   * replace undefined with null and init autocomplete choices\r\n   */\r\n  ngOnInit(): void {\r\n    this.readOnly =\r\n      this.schema.readOnly || (this.schema.createOnly && this.value);\r\n\r\n    if (!this.rootSchema) {\r\n      this.rootSchema = this.schema;\r\n      this.rootValue = this.value;\r\n      this.isRoot = true;\r\n    }\r\n\r\n    if (!this.schema.type) {\r\n      const p = this.schema.$ref;\r\n      const parts = p.split(\"#\");\r\n      if (parts.length === 1) {\r\n        // URL only\r\n        this.url(parts[0], null);\r\n      } else {\r\n        if (parts[0]) {\r\n          // URL + anchor\r\n          this.url(parts[0], parts[1]);\r\n        } else {\r\n          // local ref\r\n          this.schema = JsonPointer.jsonPointer(this.rootSchema, parts[1]);\r\n          this.setOrderedProperties();\r\n        }\r\n      }\r\n    } else {\r\n      this.setOrderedProperties();\r\n    }\r\n\r\n    if (typeof this.value === \"undefined\") {\r\n      if (this.schema.default) {\r\n        this.value = this.schema.default;\r\n        setTimeout(() => this.emit(this.value), 500);\r\n      } else {\r\n        if (!this.hideUndefined) {\r\n          this.value = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.getLayout() === \"custom\") {\r\n      this.loadComponent();\r\n    }\r\n\r\n    if (this.isRoot) {\r\n      setTimeout(() => {\r\n        this.errorChange.emit(this.recursiveError());\r\n      }, 10);\r\n    }\r\n\r\n    this.ch = this.service.displayWithRegistry[this.schema.displayWith];\r\n    if (!this.ch) {\r\n      this.ch = new DefaultChoiceHandler(this.http);\r\n    }\r\n    this.control = new FormControl(this.value);\r\n    this.choices = new ReplaySubject();\r\n    if (Array.isArray(this.value)) {\r\n      const arr = [];\r\n      for (const i of this.value) {\r\n        arr.push({ name: i, value: i });\r\n      }\r\n      this.choices.next(arr);\r\n    } else {\r\n      this.choices.next([{ name: this.value, value: this.value }]);\r\n    }\r\n    if (this.value || this.value === 0) {\r\n      if (Array.isArray(this.value)) {\r\n        const arr: Observable<Choice>[] = [];\r\n        for (const i of this.value) {\r\n          arr.push(this.ch.choice(i, this.schema));\r\n        }\r\n        forkJoin(arr).subscribe((res) => this.choices.next(res));\r\n      } else {\r\n        this.ch\r\n          .choice(this.value, this.schema)\r\n          .subscribe((res) => this.choices.next([res]));\r\n      }\r\n    }\r\n    this.filteredOptions = this.control.valueChanges.pipe(\r\n      startWith(this.value),\r\n      debounceTime(this.ch.debounceTime()),\r\n      switchMap((x) => {\r\n        this.change({ target: { value: x } });\r\n        return this.ch.filter(this.value, this.schema, x, this.choices);\r\n      })\r\n    );\r\n\r\n    this.edit = new Edit(\r\n      this.schemaChange,\r\n      this.name,\r\n      this.schema,\r\n      this.parentSchema,\r\n      this.dialog\r\n    );\r\n  }\r\n\r\n  /**\r\n   * choice element activated - load values\r\n   */\r\n  focus() {\r\n    this.ch.load(this.value, this.schema).subscribe((res) => {\r\n      this.choices.next(res);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * load schema from ref, apply pointer if needed\r\n   */\r\n  url(ref: string, pointer: string) {\r\n    // URL + anchor\r\n    this.base = this.base ? new URL(ref, this.base).href : ref;\r\n\r\n    // check root schema referenced map\r\n    if (this.rootSchema.referenced && this.rootSchema.referenced[this.base]) {\r\n      const res = this.rootSchema.referenced[this.base];\r\n      this.schema = pointer ? JsonPointer.jsonPointer(res, pointer) : res;\r\n      this.setOrderedProperties();\r\n      return;\r\n    }\r\n\r\n    this.http.get(this.base).subscribe(\r\n      (res) => {\r\n        this.schema = pointer ? JsonPointer.jsonPointer(res, pointer) : res;\r\n        this.setOrderedProperties();\r\n      },\r\n      (error) => console.log(error)\r\n    );\r\n\r\n    // set temporary pseudo schema\r\n    this.schema = { type: \"string\" };\r\n    this.setOrderedProperties();\r\n  }\r\n\r\n  /**\r\n   * emit valueChange event and also any validation error\r\n   */\r\n  emit(event: any) {\r\n    this.valueChange.emit(event);\r\n    if (this.isRoot) {\r\n      setTimeout(() => {\r\n        this.errorChange.emit(this.recursiveError());\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * if the schema changes from the outside,\r\n   * reset the component state wrt. errors and the choices cache\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.schema) {\r\n      if (changes.schema.previousValue) {\r\n        this.rootSchema = null;\r\n        if (this.widgetHost.viewContainerRef) {\r\n          this.widgetHost.viewContainerRef.clear();\r\n        }\r\n        this.ngOnInit();\r\n      }\r\n    }\r\n\r\n    if (changes.switch && !changes.switch.isFirstChange()) {\r\n      if (this.getLayout() === \"custom\") {\r\n        this.loadComponent();\r\n      } else {\r\n        if (this.widgetHost.viewContainerRef) {\r\n          this.widgetHost.viewContainerRef.clear();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * angular pipe sorting function for keyValue - keep the JSON order and do not\r\n   * order alphabetically\r\n   */\r\n  originalOrder = (\r\n    a: KeyValue<string, Schema>,\r\n    b: KeyValue<string, Schema>\r\n  ): number => {\r\n    return 0;\r\n  };\r\n\r\n  /**\r\n   * key method to instruct the display which HTML block to activate.\r\n   */\r\n  getLayout(): string {\r\n    if (this.schema.case && this.schema.case.indexOf(this.switch) < 0) {\r\n      return \"none\";\r\n    }\r\n    if (this.schema.widget === \"custom\") {\r\n      return \"custom\";\r\n    }\r\n    if (this.hideUndefined && this.value === undefined) {\r\n      return \"none\";\r\n    }\r\n    if (this.schema.type === \"object\") {\r\n      if (this.schema.additionalProperties) {\r\n        if (this.schema.layout === \"tab\") {\r\n          return \"additionalPropertiesTab\";\r\n        }\r\n        return \"additionalProperties\";\r\n      }\r\n      return \"object\";\r\n    }\r\n    if (this.schema.type === \"array\") {\r\n      if (this.schema.layout === \"tab\") {\r\n        return \"tab\";\r\n      }\r\n      if (this.schema.layout === \"table\") {\r\n        return \"table\";\r\n      }\r\n      if (this.schema.layout === \"select\") {\r\n        return \"array-select\";\r\n      }\r\n      if (this.schema.layout === \"chips\") {\r\n        return \"chips\";\r\n      }\r\n      return \"array\";\r\n    }\r\n    if (this.schema.enum) {\r\n      return \"enum\";\r\n    }\r\n    if (this.schema.widget === \"date\") {\r\n      return \"date\";\r\n    }\r\n    if (this.schema.widget === \"upload\") {\r\n      return \"upload\";\r\n    }\r\n    if (this.schema.widget === \"textarea\") {\r\n      return \"textarea\";\r\n    }\r\n    if (this.schema.type === \"boolean\") {\r\n      return \"checkbox\";\r\n    }\r\n    if (this.schema.choicesUrl) {\r\n      return \"autocomplete\";\r\n    }\r\n    if (this.schema.choices) {\r\n      return \"autocomplete\";\r\n    }\r\n    if (this.schema.displayWith) {\r\n      return \"autocomplete\";\r\n    }\r\n    return \"single\";\r\n  }\r\n\r\n  /**\r\n   * called from template in the \"simple\" type. If \"type\" is \"number\" or \"integer\",\r\n   * the HTML input type is \"number\" which avoids normal string input\r\n   */\r\n  getInputType(schema: Schema): string {\r\n    if (schema.type === \"number\") {\r\n      return \"number\";\r\n    }\r\n    if (schema.type === \"integer\") {\r\n      return \"number\";\r\n    }\r\n    return schema.widget;\r\n  }\r\n\r\n  /**\r\n   * event handler for object display. Catches the child component event and\r\n   * handle it by setting the value[key].\r\n   * Also init null objects with {}\r\n   */\r\n  onValueChange(key: string, value: any) {\r\n    if (!this.value) {\r\n      this.value = {};\r\n    }\r\n    this.value[key] = value;\r\n\r\n    if (this.schema.computed) {\r\n      for (const field of Object.keys(this.schema.computed)) {\r\n        const expression = this.schema.computed[field];\r\n        this.value[field] = jsonata(expression).evaluate(this.value);\r\n      }\r\n    }\r\n\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * add an element to an array.\r\n   * null arrays are initialized with []\r\n   */\r\n  add() {\r\n    if (!(this.value instanceof Array)) {\r\n      this.value = [];\r\n    }\r\n    if (this.schema.items.type === \"array\") {\r\n      this.value.push([]);\r\n    } else if (this.schema.items.type === \"object\") {\r\n      this.value.push({});\r\n    } else {\r\n      this.value.push(null);\r\n    }\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * event handler for adding a field\r\n   */\r\n  addField() {\r\n    if (!this.value) {\r\n      this.value = {};\r\n    }\r\n    if (this.value[\"\"]) {\r\n      return;\r\n    }\r\n    this.value[\"\"] = null;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * remove an element from an array\r\n   */\r\n  remove(i: number) {\r\n    this.value.splice(i, 1);\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * remove a field\r\n   */\r\n  removeField(key: string) {\r\n    delete this.value[key];\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * event handler for changed field names with \"additionalProperties\"\r\n   */\r\n  fieldNameChange(key: string, newvalue: any) {\r\n    this.value[newvalue] = this.value[key];\r\n    delete this.value[key];\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * returns the validation error on this level and call recursively for all children.\r\n   * returns null if the form contents is valid\r\n   */\r\n  recursiveError(): string {\r\n    const e = this.error();\r\n    if (e) {\r\n      return e;\r\n    }\r\n    if (this.child) {\r\n      return this.child.recursiveError();\r\n    }\r\n    if (this.children) {\r\n      for (const c of this.children) {\r\n        const r = c.recursiveError();\r\n        if (r) {\r\n          return r;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * return the error message provided in the schema or the generic error message\r\n   * returned from the validation code\r\n   */\r\n  e(error: string): string {\r\n    if (this.schema.errorMessage) {\r\n      return this.schema.errorMessage;\r\n    }\r\n    return error;\r\n  }\r\n\r\n  /**\r\n   * return error string\r\n   */\r\n  error(): string {\r\n    if (this.schema.widget === \"custom\") {\r\n      return this.customError;\r\n    }\r\n    if (this.schema.case && this.schema.case.indexOf(this.switch) < 0) {\r\n      return null;\r\n    }\r\n    if (this.value) {\r\n      if (this.schema.maxItems) {\r\n        if (!(this.value.length <= this.schema.maxItems)) {\r\n          return this.e(\r\n            \"Only \" + this.schema.maxItems + \" array entries allowed\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.uniqueItems) {\r\n        if (!(new Set(this.value).size === this.value.length)) {\r\n          return this.e(\"Array entries must be unique\");\r\n        }\r\n      }\r\n      if (this.schema.minItems) {\r\n        if (!(this.value.length >= this.schema.minItems)) {\r\n          return this.e(\r\n            \"At least \" + this.schema.minItems + \" array entries required\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.maxProperties) {\r\n        if (!(Object.keys(this.value).length <= this.schema.maxProperties)) {\r\n          return this.e(\r\n            \"Only \" + this.schema.maxProperties + \" fields allowed\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.propertyNames) {\r\n        for (const key of Object.keys(this.value)) {\r\n          const re = new RegExp(this.schema.propertyNames);\r\n          if (!re.test(key)) {\r\n            return this.e(\"illegal field name: \" + key);\r\n          }\r\n        }\r\n      }\r\n      if (this.schema.dependencies) {\r\n        for (const dep of Object.keys(this.schema.dependencies)) {\r\n          if (this.value[dep]) {\r\n            for (const l of this.schema.dependencies[dep]) {\r\n              if (!this.value[l]) {\r\n                return this.e(dep + \" depends on \" + l);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (this.schema.minProperties) {\r\n        if (!(Object.keys(this.value).length >= this.schema.minProperties)) {\r\n          return this.e(\r\n            \"At least \" + this.schema.minProperties + \" fields required\"\r\n          );\r\n        }\r\n      }\r\n      if (this.schema.maxLength) {\r\n        if (!((\"\" + this.value).length <= this.schema.maxLength)) {\r\n          return this.e(\"Input is longer than \" + this.schema.maxLength);\r\n        }\r\n      }\r\n      if (this.schema.minLength) {\r\n        if (!((\"\" + this.value).length >= this.schema.minLength)) {\r\n          return this.e(\"Input is shorter than \" + this.schema.minLength);\r\n        }\r\n      }\r\n      if (this.schema.multipleOf) {\r\n        if (!Number.isInteger(Number(this.value) / this.schema.multipleOf)) {\r\n          return this.e(\"Must be multiple of \" + this.schema.multipleOf);\r\n        }\r\n      }\r\n      if (this.schema.exclusiveMaximum) {\r\n        if (!(Number(this.value) < this.schema.exclusiveMaximum)) {\r\n          return this.e(\"Must be less than \" + this.schema.exclusiveMaximum);\r\n        }\r\n      }\r\n      if (this.schema.maximum) {\r\n        if (!(Number(this.value) <= this.schema.maximum)) {\r\n          return this.e(\"Must be less than or equal \" + this.schema.maximum);\r\n        }\r\n      }\r\n      if (this.schema.exclusiveMinimum) {\r\n        if (!(Number(this.value) > this.schema.exclusiveMinimum)) {\r\n          return this.e(\"Must greater than \" + this.schema.exclusiveMinimum);\r\n        }\r\n      }\r\n      if (this.schema.minimum) {\r\n        if (!(Number(this.value) >= this.schema.minimum)) {\r\n          return this.e(\"Must greater than or equal \" + this.schema.minimum);\r\n        }\r\n      }\r\n    }\r\n    if (this.required) {\r\n      if (this.value == null || Object.is(this.value, NaN)) {\r\n        return this.e(\"required\");\r\n      }\r\n    }\r\n    if (this.schema.required) {\r\n      for (const dep of this.schema.required) {\r\n        if (\r\n          !this.value[dep] &&\r\n          this.value[dep] !== false &&\r\n          this.value[dep] !== 0\r\n        ) {\r\n          // ignore 'required' if dep is inactive due to switch / case\r\n          let inactive = false;\r\n          if (this.schema.switch) {\r\n            const switc = this.value[this.schema.switch];\r\n            if (switc && this.schema.properties[dep].case?.indexOf(switc) < 0) {\r\n              inactive = true;\r\n            }\r\n          }\r\n          if (!inactive) {\r\n            return this.e(dep + \" is required\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.schema.pattern) {\r\n      const re = new RegExp(this.schema.pattern);\r\n      if (!this.value) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n      if (!re.test(this.value)) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n    }\r\n    if (this.schema.format && this.service.formats[this.schema.format]) {\r\n      const re = new RegExp(this.service.formats[this.schema.format]);\r\n      if (!this.value) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n      if (!re.test(this.value)) {\r\n        return this.e(\"illegal string\");\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * use the element title if present, defaults to the label input or \"\" is both are null\r\n   */\r\n  getLabel(): string {\r\n    if (this.schema.title) {\r\n      return this.schema.title;\r\n    }\r\n    if (this.label) {\r\n      return this.label;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * input element change handler.\r\n   * normalize the different kind of events, handle the datatypes, set the value and emit the change\r\n   */\r\n  change(event: any) {\r\n    let eventTarget: any;\r\n\r\n    if (event instanceof MatSelectChange) {\r\n      event = event.value;\r\n    } else if (event instanceof MatDatepickerInputEvent) {\r\n      event = this.serializeDate(\r\n        event.value,\r\n        this.schema.dateFormat,\r\n        this.schema.type\r\n      );\r\n    } else if (event instanceof MatAutocompleteSelectedEvent) {\r\n      event = event.option.value;\r\n    } else if (event instanceof MatCheckboxChange) {\r\n      event = event.checked;\r\n    } else {\r\n      // save the event target in case the parsing changes the value\r\n      // (e.g. integer input 5.3 becomes 5, this is reflected on the UI via this handle)\r\n      eventTarget = event.target;\r\n      event = event.target.value;\r\n    }\r\n\r\n    if (event === \"\") {\r\n      event = null;\r\n    }\r\n\r\n    if (event == null) {\r\n      this.value = null;\r\n    }\r\n\r\n    if (this.schema.type === \"number\") {\r\n      this.value = parseFloat(event);\r\n    } else if (this.schema.type === \"integer\") {\r\n      this.value = parseInt(event, 10);\r\n    } else if (this.schema.type === \"boolean\") {\r\n      if (typeof event === \"string\") {\r\n        if (event === \"true\") {\r\n          this.value = true;\r\n        } else if (event === \"false\") {\r\n          this.value = false;\r\n        } else {\r\n          this.value = null;\r\n        }\r\n      } else {\r\n        this.value = event;\r\n      }\r\n    } else if (this.schema.type === \"string\") {\r\n      this.value = event;\r\n    } else if (this.schema.type === \"array\") {\r\n      this.value = event;\r\n    } else {\r\n      throw new Error(\"unknown type: \" + this.schema.type);\r\n    }\r\n\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * allows for the result of a file upload to be written into a text form element\r\n   */\r\n  handleFileInput(event: any) {\r\n    if (1024 * 1024 <= event.target.files.item(0).size) {\r\n      console.log(\"The file size is limited to 1MB\");\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.value = reader.result;\r\n      this.emit(this.value);\r\n    };\r\n   \r\n    reader.readAsDataURL(event.target.files.item(0));\r\n  }\r\n\r\n  /**\r\n   * get example values from example array and default\r\n   */\r\n  example(): string {\r\n    if (this.schema.examples && this.schema.examples[0]) {\r\n      return this.schema.examples[0];\r\n    }\r\n    if (this.schema.default) {\r\n      return this.schema.default;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * load the dynamic custom widget\r\n   */\r\n  loadComponent() {\r\n    const componentFactory =\r\n      this.componentFactoryResolver.resolveComponentFactory(\r\n        this.service.registry[this.schema.widgetType]\r\n      );\r\n    const viewContainerRef = this.widgetHost.viewContainerRef;\r\n    viewContainerRef.clear();\r\n    const componentRef = viewContainerRef.createComponent(componentFactory);\r\n\r\n    // input values\r\n    (componentRef.instance as WidgetComponent).label = this.label;\r\n    (componentRef.instance as WidgetComponent).value = this.value;\r\n    (componentRef.instance as WidgetComponent).schema = this.schema;\r\n    (componentRef.instance as WidgetComponent).rootSchema = this.rootSchema;\r\n    (componentRef.instance as WidgetComponent).rootValue = this.rootValue;\r\n\r\n    // subscribe to value changes and forward them\r\n    (componentRef.instance as WidgetComponent).valueChange.subscribe((data) => {\r\n      this.value = data;\r\n      this.emit(this.value);\r\n    });\r\n\r\n    // subscribe to error changes and forward them\r\n    (componentRef.instance as WidgetComponent).errorChange.subscribe(\r\n      (error) => {\r\n        this.customError = error;\r\n        this.errorChange.emit(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * used for expansion panels - set value and forward event\r\n   */\r\n  setAndEmit(event: any) {\r\n    this.value = event;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * set an array element and emit value change event\r\n   */\r\n  setIndexAndEmit(i: number, event: any) {\r\n    this.value[i] = event;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * set an array element's field and emit value change event (applies to table layout)\r\n   */\r\n  setIndexAndEmitTable(i: number, field: string, event: any) {\r\n    this.value[i][field] = event;\r\n    this.emit(this.value);\r\n  }\r\n\r\n  /**\r\n   * used when hideUndefined is active. Called from the UI to\r\n   * show a property with undefined value (in order to be able to set if in the form)\r\n   */\r\n  showProperty(prop: string) {\r\n    if (!this.value) {\r\n      this.value = {};\r\n    }\r\n    if (this.value[prop] === undefined) {\r\n      this.value[prop] = null;\r\n    } else if (this.value[prop] === null) {\r\n      this.value[prop] = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * used when hideUndefined is active. Called from the UI\r\n   * to determine which properties are included in the \"to add\" list\r\n   */\r\n  showPropertyList(): string[] {\r\n    if (this.schema.switch && this.value) {\r\n      const sw = this.value[this.schema.switch];\r\n      const props = [];\r\n      for (const [k, v] of Object.entries(this.schema.properties)) {\r\n        if (v.case) {\r\n          if (v.case.includes(sw)) {\r\n            props.push(k);\r\n          }\r\n        } else {\r\n          props.push(k);\r\n        }\r\n      }\r\n      return props.sort();\r\n    } else {\r\n      return Object.keys(this.schema.properties).sort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * string to date\r\n   * @param date    date string / number (millisecs since 1970)\r\n   * @param format  date format\r\n   */\r\n  parseDate(date: any, format: string): Date {\r\n    if (!date && date !== 0) {\r\n      return date;\r\n    }\r\n    if (typeof date === \"number\") {\r\n      return this.sameDate(new Date(date));\r\n    }\r\n    if (!format) {\r\n      return date;\r\n    }\r\n    const pdate = date.split(this.getDelimiter(format));\r\n    const pformat = format.split(this.getDelimiter(format));\r\n    return this.sameDate(\r\n      new Date(\r\n        pdate[pformat.indexOf(\"yyyy\")],\r\n        pdate[pformat.indexOf(\"MM\")] - 1,\r\n        pdate[pformat.indexOf(\"dd\")]\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * make sure to return the same date object instance (cannot delete date #83)\r\n   */\r\n  sameDate(nd: Date): Date {\r\n    if (!this.date) {\r\n      this.date = nd;\r\n    }\r\n    if (this.date.getTime() !== nd.getTime()) {\r\n      this.date = nd;\r\n    }\r\n    return this.date;\r\n  }\r\n\r\n  /**\r\n   * date to string\r\n   * @param date    the date to serialize\r\n   * @param format  the date format (e.g. dd-MM-yyyy)\r\n   * @param type    target datatype (allows serializing to millisecs since 1970)\r\n   */\r\n  serializeDate(date: Date, format: string, type: string): string {\r\n    if (date == null) {\r\n      return \"\";\r\n    }\r\n    if (type === \"integer\" || type === \"number\") {\r\n      return \"\" + date.valueOf();\r\n    }\r\n    if (!format) {\r\n      return date.toISOString();\r\n    }\r\n    const pformat = format.split(this.getDelimiter(format));\r\n    const pdate = [null, null, null];\r\n    pdate[pformat.indexOf(\"yyyy\")] = date.getFullYear();\r\n    pdate[pformat.indexOf(\"MM\")] = date.getMonth() + 1;\r\n    pdate[pformat.indexOf(\"dd\")] = date.getDate();\r\n    return (\r\n      pdate[0] +\r\n      this.getDelimiter(format) +\r\n      pdate[1] +\r\n      this.getDelimiter(format) +\r\n      pdate[2]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * find the first non letter character in a date format such as dd/MM/yyyy (returns /)\r\n   */\r\n  getDelimiter(format: string): string {\r\n    const delim = format.match(/\\W/g);\r\n    if (!delim[0]) {\r\n      throw new Error(\"No delimiter found in date format: \" + format);\r\n    }\r\n    return delim[0];\r\n  }\r\n\r\n  /**\r\n   * new chip entered\r\n   */\r\n  addChip(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || \"\").trim()) {\r\n      if (!this.value) {\r\n        this.value = [];\r\n      }\r\n      this.value.push(value.trim());\r\n      this.emit(this.value);\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = \"\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * remove a chip\r\n   */\r\n  removeChip(v: string): void {\r\n    const index = this.value.indexOf(v);\r\n    if (index >= 0) {\r\n      this.value.splice(index, 1);\r\n      if (this.value.length === 0) {\r\n        this.value = null;\r\n      }\r\n      this.emit(this.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * chips d&d handler\r\n   */\r\n  dropChip(event: CdkDragDrop<string[]>) {\r\n    moveItemInArray(this.value, event.previousIndex, event.currentIndex);\r\n    this.emit(this.value);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { WidgetDirective } from './widget.directive';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { EditElementDialogComponent } from './edit-element-dialog.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  declarations: [JsonSchemaFormComponent, EditElementDialogComponent, WidgetDirective],\r\n  imports: [\r\n    MatCardModule,\r\n    FlexLayoutModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatAutocompleteModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatMenuModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatChipsModule,\r\n    DragDropModule\r\n  ],\r\n  exports: [JsonSchemaFormComponent],\r\n  providers: [\r\n    // turn off tooltip gestures on mobile: https://github.com/angular/components/issues/4892\r\n    { provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: { touchGestures: 'off' } }\r\n  ]\r\n\r\n})\r\nexport class JsonSchemaFormModule { }\r\n","/*\r\n * Public API Surface of json-schema-form\r\n */\r\nexport * from './lib/json-schema-form.service';\r\nexport * from './lib/json-schema-form.component';\r\nexport * from './lib/json-schema-form.module';\r\nexport * from './lib/schema';\r\nexport * from './lib/widget.component';\r\nexport * from './lib/choice';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵelement"],"mappings":"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"}